@use '../../sass-utilities' as *;

$pf-v6-c-masthead--breakpoint-map: build-breakpoint-map();
$pf-v6-c-masthead--inset-map: build-spacer-map("none", "sm", "md", "lg", "xl", "2xl");

:where(:root, .#{$masthead}) {
  // * Masthead
  --#{$masthead}--RowGap: var(--pf-t--global--spacer--sm);
  --#{$masthead}--ColumnGap: var(--pf-t--global--spacer--md);
  --#{$masthead}--BorderWidth: var(--pf-t--global--border--width--divider--default);
  --#{$masthead}--PaddingBlock: var(--pf-t--global--spacer--md);
  --#{$masthead}--PaddingInline: var(--pf-t--global--spacer--lg);
  --#{$masthead}--BorderColor: var(--pf-t--global--border--color--default);
  --#{$masthead}--BackgroundColor: var(--pf-t--global--background--color--secondary--default);

  // * Masthead brand
  --#{$masthead}__brand--MarginInlineEnd: var(--pf-t--global--spacer--md);
  --#{$masthead}__brand--MaxHeight: #{pf-size-prem(38px)};

  // * Masthead toggle
  --#{$masthead}__toggle--Size: var(--pf-t--global--icon--size--xl);

  // * Masthead stack
  --#{$masthead}--m-display-stack--GridTemplateColumns: max-content 1fr;
  --#{$masthead}--m-display-stack__main--GridColumn: -1 / 1;
  --#{$masthead}--m-display-stack__main--Order: -1;
  --#{$masthead}--m-display-stack__main--PaddingBlockEnd: var(--#{$masthead}--RowGap);
  --#{$masthead}--m-display-stack__main--BorderBlockEnd: var(--#{$masthead}--BorderWidth) solid var(--#{$masthead}--BorderColor);
  --#{$masthead}--m-display-stack__content--GridColumn: 2;
  --#{$masthead}--m-display-stack__content--Order: 1;

  // * Masthead inline
  --#{$masthead}--m-display-inline--GridTemplateColumns: subgrid; // max-content max-content 1fr;
  --#{$masthead}--m-display-inline__main--GridColumn: 2; // TODO 
  --#{$masthead}--m-display-inline__main--Order: 0;
  --#{$masthead}--m-display-inline__main--PaddingBlockEnd: 0;
  --#{$masthead}--m-display-inline__main--BorderBlockEnd: 0;
  --#{$masthead}--m-display-inline__content--GridColumn: 3;
  --#{$masthead}--m-display-inline__content--Order: 0;

  // * Masthead toolbar
  --#{$masthead}__expandable-content--BoxShadow: var(--pf-t--global--box-shadow--md--bottom);
  --#{$masthead}__expandable-content--BorderBlockStart: var(--#{$masthead}--BorderWidth) solid var(--#{$masthead}--BorderColor);

  // * Masthead toolbar
  --#{$masthead}--c-toolbar--Width: 100%;
  --#{$masthead}--c-toolbar--PaddingBlock: 0;
  --#{$masthead}--c-toolbar--PaddingInline: 0;
}

// * Masthead display stack
@mixin pf-v6-c-masthead--m-display-stack {
  --#{$masthead}--GridTemplateColumns: var(--#{$masthead}--m-display-stack--GridTemplateColumns);
  --#{$masthead}__main--GridColumn: var(--#{$masthead}--m-display-stack__main--GridColumn);
  --#{$masthead}__main--Order: var(--#{$masthead}--m-display-stack__main--Order);
  --#{$masthead}__main--PaddingBlockEnd: var(--#{$masthead}--m-display-stack__main--PaddingBlockEnd);
  --#{$masthead}__main--BorderBlockEnd: var(--#{$masthead}--m-display-stack__main--BorderBlockEnd);
  --#{$masthead}__content--GridColumn: var(--#{$masthead}--m-display-stack__content--GridColumn);
  --#{$masthead}__content--Order: var(--#{$masthead}--m-display-stack__content--Order);
}

// * Masthead display inline
@mixin pf-v6-c-masthead--m-display-inline {
  --#{$masthead}--GridTemplateColumns: var(--#{$masthead}--m-display-inline--GridTemplateColumns);
  --#{$masthead}__main--GridColumn: var(--#{$masthead}--m-display-inline__main--GridColumn);
  --#{$masthead}__main--Order: var(--#{$masthead}--m-display-inline__main--Order);
  --#{$masthead}__main--PaddingBlockEnd: var(--#{$masthead}--m-display-inline__main--PaddingBlockEnd);
  --#{$masthead}__main--BorderBlockEnd: var(--#{$masthead}--m-display-inline__main--BorderBlockEnd);
  --#{$masthead}__content--GridColumn: var(--#{$masthead}--m-display-inline__content--GridColumn);
  --#{$masthead}__content--Order: var(--#{$masthead}--m-display-inline__content--Order);
}

// - Masthead
.#{$masthead} {
  .#{$toolbar} {
    --#{$toolbar}--Width: var(--#{$masthead}--c-toolbar--Width);
    --#{$toolbar}--PaddingBlockEnd: 0;
    --#{$toolbar}__content--PaddingInline: var(--#{$masthead}--c-toolbar--PaddingInline);
    --#{$toolbar}__content--MinWidth: 0;
  }

  // Set layout to stack by default
  @include pf-v6-c-masthead--m-display-stack;

  // Set layout to inline at medium breakpoint
  :where(:not(.pf-m-resize-observer)) & {
    @media screen and (min-width: $pf-v6-global--breakpoint--md) {
      @include pf-v6-c-masthead--m-display-inline;
    }
  }

  // - Masthead
  display: grid;
  grid-template-columns: var(--#{$masthead}--GridTemplateColumns);
  row-gap: var(--#{$masthead}--RowGap);
  column-gap: var(--#{$masthead}--ColumnGap);
  align-items: start;
  min-width: 0;

  // set the fallback of any customizable, nested variable to its default value
  padding-block-start: var(--#{$masthead}--PaddingBlockStart, var(--#{$masthead}--PaddingBlock));
  padding-block-end: var(--#{$masthead}--PaddingBlockEnd, var(--#{$masthead}--PaddingBlock));
  padding-inline-start: var(--#{$masthead}--PaddingInlineStart, var(--#{$masthead}--PaddingInline));
  padding-inline-end: var(--#{$masthead}--PaddingInlineEnd, var(--#{$masthead}--PaddingInline));
  background-color: var(--#{$masthead}--BackgroundColor);

  .#{$toolbar}__content-section {
    flex-wrap: nowrap;
    min-width: 0;
  }

  // - Masthead toolbar expandable content
  .#{$toolbar}__expandable-content {
    inset-block-start: 100%;
    border-block-start: var(--#{$masthead}__expandable-content--BorderBlockStart);
    box-shadow: var(--#{$masthead}__expandable-content--BoxShadow);
  }

  // - Masthead display stack
  &.pf-m-display-stack {
    @include pf-v6-c-masthead--m-display-stack;
  }

  // - Masthead display inline
  &.pf-m-display-inline {
    @include pf-v6-c-masthead--m-display-inline;
  }

  // - Masthead insets
  @each $inset, $inset-value in $pf-v6-c-masthead--inset-map {
    &.pf-m-inset-#{$inset} {
      padding-inline-start: #{$inset-value};
      padding-inline-end: #{$inset-value};
    }
  }
}

// - Masthead main masthead content masthead logo
.#{$masthead},
.#{$masthead}__main {
  position: relative;
}

.#{$masthead}__main,
.#{$masthead}__content,
.#{$masthead}__logo,
.#{$masthead}__brand {
  display: flex;
  align-self: stretch;
}

// - Masthead main masthead brand masthead content
.#{$masthead}__main,
.#{$masthead}__brand,
.#{$masthead}__content {
  min-width: #{pf-size-prem(4ch)}; // allow flex containers to shrink to fit possible overflow
}

// - Masthead Main
.#{$masthead}__main {
  grid-column: var(--#{$masthead}__main--GridColumn);
  row-gap: var(--#{$masthead}__main--RowGap, var(--#{$masthead}--RowGap));
  align-items: var(--#{$masthead}__main--AlignItems, var(--#{$masthead}--AlignItems));
  order: var(--#{$masthead}__main--Order);
  padding-block-end: var(--#{$masthead}__main--PaddingBlockEnd);
  border-block-end: var(--#{$masthead}__main--BorderBlockEnd);
}

// - Masthead content
.#{$masthead}__content {
  flex-wrap: wrap;
  grid-column: var(--#{$masthead}__content--GridColumn);
  grid-column-end: -1; // force content to right edge or full available width
  row-gap: var(--#{$masthead}__content-RowGap, var(--#{$masthead}--RowGap));
  column-gap: var(--#{$masthead}__content-ColumnGap, var(--#{$masthead}--ColumnGap));
  align-items: var(--#{$masthead}__content--AlignItems, var(--#{$masthead}--AlignItems));
  order: var(--#{$masthead}__content--Order);
}

// - Masthead brand
.#{$masthead}__brand {
  align-items: var(--#{$masthead}__brand--AlignItems, var(--#{$masthead}--AlignItems));
  max-height: var(--#{$masthead}__brand--MaxHeight);
  margin-inline-end: var(--#{$masthead}__brand--MarginInlineEnd);
}

// - Masthead toggle
.#{$masthead}__toggle {
  --#{$button}--FontSize: var(--#{$masthead}__toggle--Size);
}

// - Masthead expandable content
.#{$masthead}__expandable-content {
  row-gap: var(--#{$masthead}__expandable-content-RowGap, var(--#{$masthead}--RowGap));
  background-color: var(--#{$masthead}--BackgroundColor);
}

// TODO: move this sass to separate file for resize observer updates
// TODO: make this an opt in/out
// stylelint-disable no-duplicate-selectors
.#{$masthead} {
  @each $breakpoint, $breakpoint-value in $pf-v6-c-masthead--breakpoint-map {
    $breakpoint-name: if($breakpoint != "base", -on-#{$breakpoint}, "");

    @include pf-v6-apply-breakpoint($breakpoint) {
      &.pf-m-display-stack#{$breakpoint-name} {
        @include pf-v6-c-masthead--m-display-stack;
      }

      &.pf-m-display-inline#{$breakpoint-name} {
        @include pf-v6-c-masthead--m-display-inline;
      }
    }

    @each $inset, $inset-value in $pf-v6-c-masthead--inset-map {
      &.pf-m-inset-#{$inset} {
        padding-inline-start: #{$inset-value};
        padding-inline-end: #{$inset-value};
      }
    }
  }
}
