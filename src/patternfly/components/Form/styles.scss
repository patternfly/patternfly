@import "../../patternfly-utilities";

:root {
  // Inputs
  // Font-size
  --pf-c-form__input--FontSize: var(--pf-global--FontSize--md);
  --pf-c-form__input--LineHeight: var(--pf-global--LineHeight--md);

  // Padding
  --pf-c-form__input--PaddingTop: var(--pf-global--spacer--xs);
  --pf-c-form__input--PaddingRight: var(--pf-global--spacer--md);
  --pf-c-form__input--PaddingBottom: var(--pf-global--spacer--xs);
  --pf-c-form__input--PaddingLeft: var(--pf-global--spacer--sm);

  // Input - colors
  --pf-c-form__input--Color: var(--pf-global--Color--dark-100);
  --pf-c-form__input--Color--disabled: var(--pf-global--Color--disabled);

  // Input - border sizes
  --pf-c-form__input--BorderSize: var(--pf-global--BorderWidth--sm);
  --pf-c-form__input--BorderSize--hover: var(--pf-global--BorderWidth--md);
  --pf-c-form__input--BorderSize--focus: var(--pf-global--BorderWidth--md);

  // Input - border color
  --pf-c-form__input--BorderColor: var(--pf-global--BorderColor--dark);
  --pf-c-form__input--BorderColor--focus: var(--pf-global--BorderColor--active);
  --pf-c-form__input--BorderColor--disabled: var(--pf-global--BorderColor--disabled);
  --pf-c-form__input--BorderColor--error: var(--pf-global--BorderColor--error);

  // Input - error state variables
  --pf-c-form__input--Right--error: var(--pf-global--spacer--sm);

  // Input - background
  --pf-c-form__input--Background: var(--pf-global--BackgroundColor--light-100);
  --pf-c-form__input--Background--disabled: var(--pf-global--BackgroundColor--disabled);

  // Input - placeholder
  --pf-c-form__placeholder--Color: var(--pf-global--Color--dark-200);

  // Check > Label
  --pf-c-form__check__label--PaddingTop: var(--pf-global--spacer--sm);
  --pf-c-form__check__label--PaddingRight: 0;
  --pf-c-form__check__label--PaddingBottom: var(--pf-global--spacer--sm);
  --pf-c-form__check__label--PaddingLeft: 0;
  --pf-c-form__check--MarginRight--addons: var(--pf-global--spacer--sm);

  // Label
  --pf-c-form__label--Color: var(--pf-global--Color--dark-200);
  --pf-c-form__label--FontWeight: var(--pf-global--FontWeight--semi-bold);
  --pf-c-form__label--FontSize: var(--pf-global--FontSize--md);
  --pf-c-form__label--PaddingBottom: var(--pf-global--spacer--sm);
  --pf-c-form__label--MarginRight: var(--pf-global--spacer--sm);

  // Label - required
  --pf-c-form__label--Left--required: -12px;
  --pf-c-form__label--Top--required: 2px;

  // Label - disabled
  --pf-c-form__label--Color--disabled: var(--pf-global--Color--disabled);

  // Label Group
  --pf-c-form__label-group__item--MarginLeft: var(--pf-global--spacer--sm);

  // Form check
  --pf-c-form__check__item--MarginRight: var(--pf-global--spacer--md);
  --pf-c-form__check--Padding: var(--pf-global--spacer--sm);

  // Addons
  --pf-c-form__check__addons--MarginLeft: var(--pf-global--spacer--sm);

  // Checkbox 
  --pf-c-form__checkbox--MarginRight: var(--pf-global--spacer--md);
  --pf-c-form__checkbox--PaddingTop: var(--pf-global--spacer--sm);
  --pf-c-form__checkbox--PaddingRight: 0;
  --pf-c-form__checkbox--PaddingBottom: var(--pf-global--spacer--sm);
  --pf-c-form__checkbox--PaddingLeft: 0;

  // Radio
  // == Change me ==
  --pf-c-form__radio--MarginRight: var(--pf-global--spacer--md);

  // Fieldset
  --pf-c-form__fieldset--FontWeight: var(--pf-global--FontWeight--bold);

  // Select
  --pf-c-select__arrow--BorderWidth: var(--pf-global--BorderWidth--md);

  // Change these to globals
  // States
  --pf-c-form--Color--error: var(--pf-global--danger-color--dark);

  // Helpers
  --pf-c-form__helper-text--MarginTop: var(--pf-global--spacer--sm);
  --pf-c-form__helper-text--FontSize: var(--pf-global--FontSize--sm);

  // Textarea
  --pf-c-form__textarea--Padding: var(--pf-global--spacer--sm);

  // Actions
  --pf-c-form__form-actions--MarginRight: var(--pf-global--spacer--md);

  // Tooltip
  --pf-c-tooltip--MarginLeft: var(--pf-global--spacer--xs);

  // Inline
  --pf-c-form--MarginRight--inline: var(--pf-global--spacer--md);
}

// Base form
.pf-c-form {

  // Form group - pf-c-form__group
  &__group {

    // Inline layout
    &.pf-m-inline {
      display: flex;
      flex-flow: row wrap;
      > * {
        flex: 0;
        margin-right: var(--pf-c-form--MarginRight--inline);
      }

      // Label outside of pf-c-form__check
      > .pf-c-form__label {
        flex: 1 0 100%;
        margin: 0;
      }

      .pf-c-form__label {
        white-space: nowrap;
      }
    }
  }

  // Form label - pf-c-form__label
  &__label {
    display: flex;
    align-items: baseline;
    // using padding here to prevent flicker
    padding-bottom: var(--pf-c-form__label--PaddingBottom);
    margin: 0;
    font-size: var(--pf-c-form__label--FontSize);

    // Hide label selection on click
    &::selection {
      background: none;
    }

    // State - disabled
    &.pf-m-disabled {
      color: var(--pf-c-form__label--Color--disabled);
    }

    // Required
    &.pf-m-required {
      position: relative;

      &::before {
        position: absolute;
        top: var(--pf-c-form__label--Top--required);
        left: var(--pf-c-form__label--Left--required);
        content: "\002A";
      }
    }
  }

  // Label group - pf-c-form__label-group
  // Used when label contains elements like tooltips
  &__label-group {
    display: flex;

    // Space 
    > *:not(.pf-c-form__label) {
      margin-left: var(--pf-c-form__label-group__item--MarginLeft);
    }

    &.pf-m-tooltip {
      display: inline-flex;
      align-items: first baseline;

      > * {
        margin-right: var(--pf-c-tooltip--MarginLeft);
      }
    }
  }

  // Text, textarea and select inputs
  &__input[type="text"],
  &__select select,
  &__input[list],
  &__textarea {
    width: 100%;
    padding: var(--pf-c-form__input--PaddingTop) var(--pf-c-form__input--PaddingRight) var(--pf-c-form__input--PaddingBottom) var(--pf-c-form__input--PaddingLeft);
    font-size: var(--pf-c-form__input--FontSize);
    line-height: var(--pf-c-form__input--LineHeight);
    color: var(--pf-c-form__input--Color);
    background: var(--pf-c-form__input--Background);
    border: none;
    box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize) var(--pf-c-form__input--BorderColor);
    transition: .2s;

    // Hover
    &:hover:not([disabled]) {
      box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize--hover) var(--pf-c-form__input--BorderColor);
    }

    // Focus
    &:focus,
    &:hover:focus {
      outline: none;
      box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize--focus) var(--pf-c-form__input--BorderColor--focus);
    }

    // Disabled
    &:disabled {
      color: var(--pf-c-form__input--Color--disabled);
      background-color: var(--pf-c-form__input--Background--disabled);
      box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize) var(--pf-c-form__input--BorderColor--disabled);

      &:hover {
        cursor: not-allowed;
      }
    }
  }

  // Text inputs - pf-c-form__input[type="text"]
  &__input[type="text"] {
    &.pf-m-error,
    &.pf-m-error:hover {
      padding-right: calc(#{$pf-global--spacer--sm} + #{$pf-global--spacer--md} + #{var(--pf-c-form__input--FontSize)});
      color: var(--pf-c-form--Color--error);
      box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize--focus) var(--pf-c-form__input--BorderColor--error);
      box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize--focus) var(--pf-c-form__input--BorderColor--error);
    }
  }

  &__select select,
  &__input[list] {
    padding-right: calc(#{$pf-global--spacer--sm} + #{$pf-global--spacer--md} + #{var(--pf-c-form__input--FontSize)});
  }

  // Datalists and selects - pf-c-form__input[list="datalist"], pf-c-form__select
  &__datalist,
  &__select {
    position: relative;

    &:not(.pf-is-multiple)::after {
      position: absolute;
      top: calc(50% - #{var(--pf-c-form__input--FontSize)} * .3);
      right: var(--pf-c-form__input--FontSize);
      box-sizing: content-box;
      display: inline-block;
      width: calc(#{var(--pf-c-form__input--FontSize)} * .3);
      height: calc(#{var(--pf-c-form__input--FontSize)} * .3);
      margin-left: 1rem;
      vertical-align: .25rem;
      pointer-events: none;
      content: "";
      border-style: solid;
      border-width: var(--pf-c-select__arrow--BorderWidth) var(--pf-c-select__arrow--BorderWidth) 0 0;
      transform: rotate(135deg);
    }
  }

  &__datalist {
    input::-webkit-calendar-picker-indicator {
      position: absolute;
      top: 0;
      right: 0;
      z-index: 999;
      width: calc(#{var(--pf-c-form__input--FontSize)} * 2);
      height: 100%;
      opacity: 0;
    }
  }

  // Selects - pf-c-form__select
  // Because select 
  &__select {
    select {
      border-radius: 0;

      /* stylelint-disable */
      -webkit-appearance: none;
      -moz-appearance: none;
      -ms-appearance: none;

      &[multiple] {
        overflow-y: auto;
      }
      /* stylelint-enable */

      &:hover {
        cursor: pointer;
      }

      &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 var(--pf-c-form__input--Color);
        transition: none;
      }

      // option:not(:checked) {
      // color: #000; /* prevent <option>s from becoming transparent as well */
      // }

      &:disabled {
        color: var(--pf-c-form__input--Color--disabled);
        background-color: var(--pf-c-form__input--Background--disabled);
        box-shadow: inset 0 0 0 var(--pf-c-form__input--BorderSize) var(--pf-c-form__input--BorderColor--disabled);
      }

      // Checkbox check
      &::after {
        position: absolute;
        top: 3px;
        left: 2px;
        z-index: 0;
        width: 5px;
        height: 8px;
        content: "";
        border: solid #fff;
        border-width: 0 2px 2px 0;
        opacity: 0;
        transform: rotate(45deg);
        transform-origin: 100% 100%;
      }
    }
  }

  // Checkbox and radio container - pf-c-form__check
  &__check {
    display: flex;
    flex: 1;
    align-items: baseline;

    > *:not(.pf-c-form__label):not([type="checkbox"]):not([type="radio"]) {
      margin-left: var(--pf-c-form__check__addons--MarginLeft);
    }

    .pf-c-form__checkbox,
    .pf-c-form__radio {
      margin-right: var(--pf-c-form__checkbox--MarginRight);
    }

    .pf-c-form__label {
      padding: var(--pf-c-form__check__label--PaddingTop) var(--pf-c-form__check__label--PaddingRight) var(--pf-c-form__check__label--PaddingBottom) var(--pf-c-form__check__label--PaddingLeft);

      &:not(.pf-m-disabled):hover {
        cursor: pointer;
      }

      &.pf-m-disabled:hover {
        cursor: not-allowed;
      }

      // Checkbox check
      &::before {
        position: absolute;
        top: 3px;
        left: 2px;
        z-index: 0;
        width: 5px;
        height: 8px;
        content: "";
        border: solid #fff;
        border-width: 0 2px 2px 0;
        opacity: 0;
        transform: rotate(45deg);
        transform-origin: 100% 100%;
      }
    }
  }

  // Checkbox and radio - pf-c-form__checkbox, pf-c-form__radio
  &__checkbox,
  &__radio {

    &:disabled:hover,
    &:disabled:hover ~ .pf-c-form__label {
      cursor: not-allowed;
    }

    // Hover
    &:not(:disabled):hover,
    &:not(:disabled):hover ~ .pf-c-form__label {
      cursor: pointer;
    }
  }

  // Control - input container - pf-c-form__control
  &__control {
    position: relative;

    &.pf-m-addons {
      display: flex;
      align-items: stretch;

      > * {
        align-self: stretch;
      }

      .pf-c-button {
        flex: 0;
        border-radius: 0;
      }
    }

    &.pf-m-error {
      $pf-c-form__Input--Right--has-error: $pf-global--spacer--sm !default;

      &::after {
        position: absolute;
        top: calc(50% - (#{var(--pf-c-form__input--FontSize)} / 2));
        right: var(--pf-c-form__input--Right--error);
        display: block;
        width: var(--pf-c-form__input--FontSize);
        height: var(--pf-c-form__input--FontSize);
        content: "";
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' viewBox='0 0 512 512'%3E%3Cpath fill='%23A30000' d='M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-size: cover;
      }
    }
  }

  &__fieldset {
    border: none;
  }

  &__legend {
    font-weight: var(--pf-c-form__fieldset--FontWeight);
  }

  &__textarea {
    width: 100%;
    padding: var(--pf-c-form__textarea--Padding);
  }

  &__helper-text {
    margin-top: var(--pf-c-form__helper-text--MarginTop);
    font-size: var(--pf-c-form__helper-text--FontSize);

    &.pf-m-error {
      color: var(--pf-c-form--Color--error);
    }
  }

  &__actions {
    display: inline-flex;

    > * {
      margin-right: var(--pf-c-form__form-actions--MarginRight);
    }
  }

  // Modifier
  &.m-danger {
    background-color: var(--pf-c-form--is-danger--BackgroundColor, #c00);
  }
}
