// @debug $draggable; // check your variable names located in src/patternfly/sass-utilities/component-namespaces.scss

.#{$draggable} {
  --#{$draggable}--Cursor: auto;
  --#{$draggable}--m-dragging--Cursor: grabbing;
  --#{$draggable}--m-dragging--BoxShadow: var(--#{$pf-global}--BoxShadow--md);
  --#{$draggable}--m-dragging--after--BorderWidth: var(--#{$pf-global}--BorderWidth--sm);
  --#{$draggable}--m-dragging--after--BorderColor: var(--#{$pf-global}--active-color--100);
  --#{$draggable}--m-drag-outside--Cursor: not-allowed;
  --#{$draggable}--m-drag-outside--after--BorderColor: var(--#{$pf-global}--danger-color--100);

  cursor: var(--#{$draggable}--Cursor);

  &.pf-m-dragging {
    --#{$draggable}--Cursor: var(--#{$draggable}--m-dragging--Cursor);

    position: relative;
    background-color: var(--#{$draggable}--m-dragging--BackgroundColor); // intentionally empty to be set if doesn't exist
    box-shadow: var(--#{$draggable}--m-dragging--BoxShadow);

    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      content: "";
      border: var(--#{$draggable}--m-dragging--after--BorderWidth) solid var(--#{$draggable}--m-dragging--after--BorderColor);
    }
  }

  &.pf-m-drag-outside {
    --#{$draggable}--m-dragging--Cursor: var(--#{$draggable}--m-drag-outside--Cursor);
    --#{$draggable}--m-dragging--after--BorderColor: var(--#{$draggable}--m-drag-outside--after--BorderColor);
  }
}

.#{$droppable} {
  --#{$droppable}--before--BackgroundColor: transparent;
  --#{$droppable}--before--Opacity: 0;
  --#{$droppable}--after--BorderWidth: 0;
  --#{$droppable}--after--BorderColor: transparent;
  --#{$droppable}--m-dragging--before--BackgroundColor: var(--#{$pf-global}--palette--white);
  --#{$droppable}--m-dragging--before--Opacity: .6;
  --#{$droppable}--m-dragging--after--BorderWidth: var(--#{$pf-global}--BorderWidth--sm);
  --#{$droppable}--m-dragging--after--BorderColor: var(--#{$pf-global}--active-color--100);
  --#{$droppable}--m-drag-outside--after--BorderColor: var(--#{$pf-global}--danger-color--100);

  &::before,
  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    pointer-events: none;
    content: "";
  }

  &::before {
    background-color: var(--#{$droppable}--before--BackgroundColor);
    opacity: var(--#{$droppable}--before--Opacity);
  }

  &::after {
    border: var(--#{$droppable}--after--BorderWidth, 0) solid var(--#{$droppable}--after--BorderColor, transparent);
  }

  &.pf-m-dragging {
    --#{$droppable}--before--BackgroundColor: var(--#{$droppable}--m-dragging--before--BackgroundColor);
    --#{$droppable}--before--Opacity: var(--#{$droppable}--m-dragging--before--Opacity);
    --#{$droppable}--after--BorderWidth: var(--#{$droppable}--m-dragging--after--BorderWidth);
    --#{$droppable}--after--BorderColor: var(--#{$droppable}--m-dragging--after--BorderColor);

    position: relative;
  }

  &.pf-m-drag-outside {
    --#{$droppable}--m-dragging--after--BorderColor: var(--#{$droppable}--m-drag-outside--after--BorderColor);
  }
}

// stylelint-disable no-invalid-position-at-import-rule
@import "themes/dark/drag-drop";

@include pf-v5-theme-dark {
  @include pf-v5-theme-dark-drag-drop;
}
