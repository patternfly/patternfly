@import "../../patternfly-utilities";

.pf-c-input-group {
  --pf-c-input-group__button--BorderRadius: var(--pf-global--BorderRadius--sm);
  --pf-c-input-group__text--FontSize: var(--pf-global--FontSize--md);
  --pf-c-input-group__text--PaddingRight: var(--pf-global--spacer--sm);
  --pf-c-input-group__text--PaddingLeft: var(--pf-global--spacer--sm);
  --pf-c-input-group__text--Color: var(--pf-global--Color--dark-200);
  --pf-c-input-group__text--BorderSize: var(--pf-global--BorderWidth--sm);
  --pf-c-input-group__text--BorderTopColor: var(--pf-global--BorderColor--light-200);
  --pf-c-input-group__text--BorderRightColor: var(--pf-global--BorderColor--light-200);
  --pf-c-input-group__text--BorderLeftColor: var(--pf-global--BorderColor--light-200);
  --pf-c-input-group__text--BorderBottomColor: var(--pf-global--BorderColor--dark);
  --pf-c-input-group__text--BackgroundColor: var(--pf-global--BackgroundColor--light-100);
  --pf-c-input-group__textarea--MinHeight: var(--pf-global--spacer--xl);
  --pf-c-input-group--form-control-invalid--ZIndex: var(--pf-global--ZIndex--xs);
  /* stylelint-disable */
  > * + * {
    margin-left: -1px;
  }

  label.pf-c-input-group__text {
    cursor: pointer;
  }
  /* stylelint-enable */

  .pf-c-form-control {
    position: static;

    &[aria-invalid="true"] {
      position: relative;
      z-index: var(--pf-c-input-group--form-control-invalid--ZIndex);

      &:not(:last-child) {
        margin-right: 1px;
      }
    }
  }


  display: flex;
  width: 100%;

  .pf-c-button {
    position: relative;

    &,
    &::after {
      border-radius: 0;
    }

    // Applies top/left and bottom/left border-radius to a button if it's the first item in the input group
    &:first-child {
      &,
      &::after {
        border-radius: var(--pf-c-input-group__button--BorderRadius) 0 0 var(--pf-c-input-group__button--BorderRadius);
      }
    }

    // Applies top/right and bottom/right border-radius to a button if it's the last item in the input group
    &:last-child {
      &,
      &::after {
        border-radius: 0 var(--pf-c-input-group__button--BorderRadius) var(--pf-c-input-group__button--BorderRadius) 0;
      }
    }
  }

  .pf-c-dropdown__toggle {
    height: 100%;
  }

  input:not([type="checkbox"]):not([type="radio"]),
  textarea {
    flex: 2;
  }

  textarea {
    min-height: var(--pf-c-input-group__textarea--MinHeight);
  }

  .pf-c-input-group__text {
    display: flex;
    align-items: center;
    padding-right: var(--pf-c-input-group__text--PaddingRight);
    padding-left: var(--pf-c-input-group__text--PaddingLeft);
    font-size: var(--pf-c-input-group__text--FontSize);
    color: var(--pf-c-input-group__text--Color);
    text-align: center;
    background-color: var(--pf-c-input-group__text--BackgroundColor);
    border: var(--pf-c-input-group__text--BorderSize) solid;
    border-color: var(--pf-c-input-group__text--BorderTopColor) var(--pf-c-input-group__text--BorderRightColor) var(--pf-c-input-group__text--BorderBottomColor) var(--pf-c-input-group__text--BorderLeftColor);
  }
}
