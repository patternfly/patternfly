@import "../../patternfly-utilities";

$pf-c-table--breakpoint--mobile: $pf-global--breakpoint--md;

.demo {
  padding: var(--pf-global--spacer--md);
  background-color: var(--pf-global--BackgroundColor--light-300);
}

.pf-c-table {

  /* stylelint-disable */

  // ============================================================ //
  // Start non-conformant variables
  //
  // these variables do not conform to guidelines as styling targets individual elements 
  // this is purposeful and necessary to avoid adding selectors to each td/th
  // ============================================================ //

  // Body
  --pf-c-table-tbody--MarginTop:                      var(--pf-global--spacer--sm);

  // Row
  --pf-c-table-tr--Padding:                           var(--pf-global--spacer--xl);
  --pf-c-table-tr--BackgroundColor:                   var(--pf-global--BackgroundColor--100);
  --pf-c-table-tr--BorderWidth:                       var(--pf-global--BorderWidth--md);
  --pf-c-table-tr--ColumnGap:                         var(--pf-global--spacer--md);
  --pf-c-table-tr--BorderColor:                       $pf-color-black-200;

  // Th
  --pf-c-table-th--FontSize:                          var(--pf-global--FontSize--sm);
  --pf-c-table-th--FontWeight:                        var(--pf-global--FontWeight--bold);
  --pf-c-table-th--PaddingTop:                        var(--pf-global--spacer--md);
  --pf-c-table-th--PaddingBottom:                     var(--pf-global--spacer--md);

  // Th - active
  --pf-c-table-th--active--BorderColor:               var(--pf-global--active-color--100);
  --pf-c-table-th--active--BorderWidth:               var(--pf-global--BorderWidth--md);

  // Td - small breakpoint
  --pf-c-table-td--PaddingTop--sm:                    var(--pf-global--spacer--sm);
  --pf-c-table-td--PaddingRight--sm:                  var(--pf-global--spacer--md);
  --pf-c-table-td--PaddingBottom--sm:                 var(--pf-global--spacer--sm);
  --pf-c-table-td--PaddingLeft--sm:                   var(--pf-global--spacer--md);
  --pf-c-table-td--MarginTop--sm:                     var(--pf-global--spacer--sm);
  --pf-c-table-td--MarginBottom--sm:                  var(--pf-global--spacer--sm);
  --pf-c-table-td--ColumnGap:                         var(--pf-global--spacer--md);

  // Td
  --pf-c-table-td--FontSize:                          var(--pf-global--FontSize--md);
  --pf-c-table-td--PaddingTop:                        var(--pf-global--spacer--xl);
  --pf-c-table-td--PaddingBottom:                     var(--pf-global--spacer--xl);
  --pf-c-table-td--GridGap:                           var(--pf-global--spacer--md);

  // Th / td shared variables
  --pf-c-table-cell--PaddingRight:                    var(--pf-global--spacer--md);
  --pf-c-table-cell--PaddingLeft:                     var(--pf-global--spacer--md);
  --pf-c-table-cell--first-child--PaddingLeft:        var(--pf-global--spacer--xl);
  --pf-c-table-cell--last-child--PaddingRight:        var(--pf-global--spacer--xl);  

  // ============================================================ //
  // End non-conformant variables
  // ============================================================ //

  // temp global transition, will move after nav system is merged
  --pf-global--transition:                              .3s;

  // Table
  --pf-c-table--Color:                                  var(--pf-global--Color--dark);

  // Table cell - toggle
  --pf-c-table__toggle--Right:                          var(--pf-global--spacer--xl);
  --pf-c-table__toggle--Bottom:                         var(--pf-global--spacer--xl);
  --pf-c-table__toggle--Right--sm:                      var(--pf-global--spacer--xl);
  --pf-c-table__toggle--Bottom--sm:                     var(--pf-global--spacer--xl);

  // Table rows
  --pf-c-table__expandable-row-content--PaddingTop:     var(--pf-global--spacer--xl);
  --pf-c-table__expandable-row-content--PaddingRight:   var(--pf-global--spacer--xl);
  --pf-c-table__expandable-row-content--PaddingBottom:  var(--pf-global--spacer--xl);
  --pf-c-table__expandable-row-content--PaddingLeft:    var(--pf-global--spacer--xl);
  --pf-c-table__expandable-row--BorderLeftColor:        var(--pf-global--active-color--100);
  // --pf-c-table__expandable-row--BorderLeftWeight:       var(--pf-global--BorderWidth--lg);
  --pf-c-table__expandable-row--BorderLeftWeight:       4px;
  --pf-c-table__expandable-row--Transition:             var(--pf-global--transition);

  // Expandable row content
  --pf-c-table__expandable-row-content--Transition:     var(--pf-global--transition);

  // Sort cell
  // calculate padding-right based on base cell padding + design spec + icon width
  --pf-c-table__sort--PaddingRight:                     calc(var(--pf-c-table-cell--PaddingRight) + var(--pf-global--spacer--md) + var(--pf-global--target-size--MinWidth));
  --pf-c-table__sort-indicator--MarginLeft:             var(--pf-global--spacer--md);

  // Sort cell svg
  --pf-c-table__sort-svg--Right:                        var(--pf-c-table-cell--PaddingRight);

  // Icon inline
  --pf-c-table__icon-inline--MarginRight:               var(--pf-global--spacer--sm);


  // ============================================================ //
  // Modifiers
  // ============================================================ //

  // Modifier - Toggle
  --pf-c-table--m-toggle--Transition:                   var(--pf-global--transition);

  // Modifier - Check button
  --pf-c-table--m-check--MarginTop--MarginTop:          var(--pf-global--spacer--sm);

  // Modifier - Action
  --pf-c-table--m-action--MarginLeft:                   var(--pf-global--spacer--sm);

  // Modifier - Fit content
  --pf-c-table--m-fit-content--PaddingRight:            var(--pf-global--spacer--sm);
  --pf-c-table--m-fit-content--PaddingLeft:             var(--pf-global--spacer--sm);

  // Modifier - Sort ascending
  --pf-c-table__sort--Transition:                       var(--pf-global--transition);

  // Check button
  --pf-c-check--MarginTop:                              var(--pf-global--spacer--sm);


  /* stylelint-enable */

  // Base
  // width: 100%;
  color: var(--pf-c-table--Color);

  // @mobile only
  // responsive layout, set display grid
  @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
    display: grid;
  }

  // Table head
  thead {
    // @mobile only
    // responsive layout, hide thead
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      display: none;
    }
  }

  // Tbody
  tbody + tbody {
    // @mobile only
    // responsive layout, add margin top for subsequent tbody
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      margin-top: var(--pf-c-table-tbody--MarginTop);
    }
  }

  // Table row
  tr {
    background-color: var(--pf-c-table-tr--BackgroundColor);
    border-top: var(--pf-c-table-tr--BorderWidth) solid var(--pf-c-table-tr--BorderColor);
  }

  // Standard table row (not expandable)
  // exclude expandable rows
  tr:not(.pf-c-table__expandable-row) {
    // set position relative for absolutely positioned elements on mobile
    position: relative;

    // @mobile only
    // set grid to one column, use auto placement for additional td options: .pf-c-table__toggle, .pf-c-table__check, .pf-c-table__action, .pf-m-blank
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      display: grid;
      grid-template-columns: 1fr;
      // set subsequent auto column width to max-content
      grid-auto-columns: max-content;
      grid-column-gap: var(--pf-c-table-tr--ColumnGap);
      padding: var(--pf-c-table-tr--Padding);
    }
  }

  // Standard td, in standard row (not expandable)
  // exclude specifically styled tds
  tr:not(.pf-c-table__expandable-row) td:not(.pf-c-table__toggle):not(.pf-c-table__check):not(.pf-c-table__action):not(.pf-m-blank) {

    // @mobile only
    // responsive layout, set td to two column grid
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      display: grid;
      grid-template-columns: 1fr 1.5fr;
      grid-column: 1;
      grid-column-gap: var(--pf-c-table-td--ColumnGap);
      margin-top: var(--pf-c-table-td--MarginTop--sm);
      margin-bottom: var(--pf-c-table-td--MarginBottom--sm);
    }

    // @mobile, breakpoint small
    @media screen and (max-width: $pf-global--breakpoint--sm) {
      // as space is limited at very small viewports, split columns 50/50
      grid-template-columns: 1fr 1fr;
    }

    // set contents of td to start at column two of td grid
    * {
      grid-column: 2;
    }

    // @mobile only
    // set contents of ::before pseudo element to start at column one of td grid
    &::before {
      @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
        grid-row: 1 / 10;
        content: attr(data-label);
      }
    }
  }

  // Table header cell
  th {
    position: relative;
    padding-top: var(--pf-c-table-th--PaddingTop);
    padding-bottom: var(--pf-c-table-th--PaddingBottom);
    font-size: var(--pf-c-table-th--FontSize);
    font-weight: var(--pf-c-table-th--FontWeight);
    vertical-align: top;
  }

  // Table cell
  td {
    font-size: var(--pf-c-table-td--FontSize);

    // @desktop
    // set td padding when display: table
    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
      padding-top: var(--pf-c-table-td--PaddingTop);
      padding-bottom: var(--pf-c-table-td--PaddingBottom);
    }
  }

  // Table cell and cell shared styling
  th,
  td {

    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {

      // Ignore modified cells for default padding right
      &:not(.pf-m-fit-content):not(.pf-m-blank):not(:last-child) {
        padding-right: var(--pf-c-table-cell--PaddingRight);
      }

      // Ignore modified cells for default padding left
      &:not(.pf-m-fit-content):not(.pf-m-blank):not(:first-child) {
        padding-left: var(--pf-c-table-cell--PaddingLeft);
      }

      // First child padding right
      &:first-child {
        padding-left: var(--pf-c-table-cell--first-child--PaddingLeft);
      }

      // Last child padding right
      &:last-child {
        padding-right: var(--pf-c-table-cell--last-child--PaddingRight);
      }
    }
  }

  // Modifier - fit-content
  .pf-m-fit-content {

    // @desktop
    // limit width and padding, fit contents of cell
    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
      width: 1%;
      padding-right: var(--pf-c-table--m-fit-content--PaddingRight);
      padding-left: var(--pf-c-table--m-fit-content--PaddingLeft);
      white-space: nowrap;
    }
  }

  // Modifier - blank
  .pf-m-blank {

    // @desktop
    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
      width: 0;
      padding: 0;
    }
  }

  // Modifier - align top
  .pf-m-align-top {
    vertical-align: top;
  }

  // make descendants of 'hidden' unavailable to screenreaders
  [hidden] * {
    display: none;
  }
}

// Expandable row
.pf-c-table__expandable-row {
  border-bottom-color: transparent;
  border-left: var(--pf-c-table__expandable-row--BorderLeftWeight) solid transparent;
  transition: var(--pf-c-table__expandable-row--Transition);

  // @mobile only
  @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
    display: block;
  }

  // Td
  td {
    padding-top: 0;
    padding-bottom: 0;

    // @mobile only
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      display: block;
    }
  }

  // ensure ::before is hidden
  td::before {
    display: none;
  }

  // @mobile only
  // hide blank cells
  .pf-m-blank {
    // @mobile only
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      display: none;
    }
  }

  // Modifier on tr - Expanded
  &.pf-m-expanded {
    border-left-color: var(--pf-c-table__expandable-row--BorderLeftColor);
  }
}

// Expandable table row 
.pf-c-table__expandable-row-content {
  max-height: 0;
  padding-top: 0;
  padding-bottom: 0;
  overflow: hidden;
  word-break: break-all;
  border-top-color: transparent;
  border-top-width: 0;
  border-left-color: transparent;
  transition: var(--pf-c-table__expandable-row-content--Transition);

  // @mobile only
  @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
    padding-right: var(--pf-c-table__expandable-row-content--PaddingRight);
    padding-left: var(--pf-c-table__expandable-row-content--PaddingLeft);
  }

  // Modifier on td- Expanded
  .pf-m-expanded & {
    max-height: 600px;
    padding-top: var(--pf-c-table__expandable-row-content--PaddingTop);
    padding-bottom: var(--pf-c-table__expandable-row-content--PaddingBottom);
    overflow-y: auto;
  }

  /* stylelint-disable */
  &::-webkit-scrollbar { 
    display: none; 
  }
  /* stylelint-enable */

  // Td
  td {

    // @mobile only
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      display: block;
    }

    // @desktop
    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
      padding-top: 0;
      padding-bottom: 0;
    }
  }
}

// Toggle table cell
.pf-c-table__toggle {
  vertical-align: baseline;

  // @mobile only
  @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
    position: absolute;
    right: 36px;
    bottom: 36px;
  }

  // @mobile only, small detail
  @media screen and (max-width: $pf-global--breakpoint--sm) {
    right: 10px;
    bottom: 12px;
  }

  // @desktop
  @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
    padding-right: var(--pf-global--spacer--md);
  }
}

// Toggle button
.pf-c-table .pf-m-toggle {
  // swap this when transitions are included in variables.scss

  > * {
    pointer-events: none;
    transition: var(--pf-c-table--m-toggle--Transition);

    // @mobile only
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      // transform: rotate(90deg);
    }

    // @desktop
    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
      transform: rotate(-90deg);
    }
  }

  // Expanded state
  &.pf-m-expanded > * {

    // @mobile only
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      transform: rotate(180deg);
    }

    // @desktop
    @media screen and (min-width: $pf-c-table--breakpoint--mobile) {
      transform: rotate(0);
    }
  }
}

// Check table cell
.pf-c-table__check {
  vertical-align: baseline;

  // @mobile only
  @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
    display: flex;
    align-self: flex-start;
    grid-row-start: 1;
    grid-column-start: 2;
  }

  // @mobile only, smallest breakpoint
  @media screen and (max-width: $pf-global--breakpoint--sm) {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  > * {
    @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
      margin-top: var(--pf-global--spacer--sm);
    }
  }
}

// Check table cell
.pf-c-table__action {
  vertical-align: middle;

  // @mobile only
  @media screen and (max-width: $pf-c-table--breakpoint--mobile) {
    grid-row-start: 1;
    grid-column-start: 3;
    grid-template-columns: 1;
  }

  // @mobile only, smallest breakpoint
  @media screen and (max-width: $pf-global--breakpoint--sm) {
    grid-row-start: 1;
    grid-column-start: 1;
    justify-self: end;
  }
}

// Sort indicator
.pf-c-table__sort-indicator {
  margin-left: var(--pf-c-table__sort-indicator--MarginLeft);
}

// Icon inline
.pf-c-table__icon-inline {
  display: flex;
  align-items: center;

  > *:not(:last-child) {
    margin-right: var(--pf-c-table__icon-inline--MarginRight);
  }
}

// Table sort
.pf-c-table__sort {
  white-space: nowrap;
  // padding-right: var(--pf-c-table__sort--PaddingRight);
  cursor: pointer;

  svg {
    opacity: .2;
    transition: var(--pf-c-table__sort--Transition);
  }

  &.pf-m-asc,
  &.pf-m-desc {
    border-bottom: var(--pf-c-table-th--active--BorderWidth) solid var(--pf-c-table-th--active--BorderColor);

    svg {
      opacity: 1;
    }
  }

  &.pf-m-asc svg {
    opacity: normal;
    transform: rotate(0deg);
  }

  &.pf-m-desc svg {
    transform: rotate(180deg);
  }
}

// Table compact
.pf-c-table-compact {
}
