.pf-c-switch {
  // Switch
  --pf-c-switch--Height: calc(var(--pf-c-switch--FontSize) * var(--pf-c-switch--LineHeight));
  --pf-c-switch--Width: calc(var(--pf-c-switch--Height) + var(--pf-c-switch__toggle-icon--Offset) + var(--pf-c-switch__toggle--before--Width));
  --pf-c-switch--LineHeight: var(--pf-global--LineHeight--md);
  --pf-c-switch--FontSize: var(--pf-global--FontSize--md);

  // Switch input
  --pf-c-switch__input--checked__toggle--BackgroundColor: var(--pf-global--primary-color--100);
  --pf-c-switch__input--checked__toggle--before--Transform: translateX(calc(100% + var(--pf-c-switch__toggle-icon--Offset)));
  --pf-c-switch__input--checked__label--Color: var(--pf-global--Color--dark-100);
  --pf-c-switch__input--not-checked__label--Color: var(--pf-global--disabled-color--100);
  --pf-c-switch__input--disabled__label--Color: var(--pf-global--disabled-color--100);
  --pf-c-switch__input--disabled__toggle--BackgroundColor: var(--pf-global--Color--dark-200);
  --pf-c-switch__input--disabled__toggle--before--BackgroundColor: var(--pf-global--disabled-color--200);
  --pf-c-switch__input--focus__toggle--OutlineWidth: var(--pf-global--BorderWidth--md);
  --pf-c-switch__input--focus__toggle--OutlineOffset: var(--pf-global--spacer--sm);
  --pf-c-switch__input--focus__toggle--OutlineColor: var(--pf-global--primary-color--100);

  // Switch icon
  --pf-c-switch__toggle-icon--FontSize: calc(var(--pf-c-switch--FontSize) * .625); // We don't use an icon font-size here because this value allows the icon to scale relative to the switch's font-size.
  --pf-c-switch__toggle-icon--Color: var(--pf-global--Color--light-100);
  --pf-c-switch__toggle-icon--PaddingLeft: calc(var(--pf-c-switch--FontSize) * .4); // during breaking change period, remove this and make it the value for `left`
  --pf-c-switch__toggle-icon--Top: 50%;
  --pf-c-switch__toggle-icon--Left: 0; // This var is sized relative to the switch's font size, so that it scales responsively.
  --pf-c-switch__toggle-icon--Transform: translateY(-50%);
  --pf-c-switch__toggle-icon--Offset: #{pf-size-prem(2px)}; // this value is created to handle sizing of the toggle and therefore the width of the toggle and its transform value.

  // Switch toggle
  --pf-c-switch__toggle--BackgroundColor: var(--pf-global--disabled-color--200);
  --pf-c-switch__toggle--BorderRadius: var(--pf-c-switch--Height);
  --pf-c-switch__toggle--before--Width: calc(var(--pf-c-switch--FontSize) - var(--pf-c-switch__toggle-icon--Offset));
  --pf-c-switch__toggle--before--Height: var(--pf-c-switch__toggle--before--Width);
  --pf-c-switch__toggle--before--Top: calc((var(--pf-c-switch--Height) - var(--pf-c-switch__toggle--before--Height)) / 2);
  --pf-c-switch__toggle--before--Left: var(--pf-c-switch__toggle--before--Top);
  --pf-c-switch__toggle--before--BackgroundColor: var(--pf-global--BackgroundColor--100);
  --pf-c-switch__toggle--before--BorderRadius: var(--pf-global--BorderRadius--lg);
  --pf-c-switch__toggle--before--BoxShadow: var(--pf-global--BoxShadow--md);
  --pf-c-switch__toggle--before--Transition: transform .25s ease 0s;

  // Switch label
  --pf-c-switch__label--PaddingLeft: var(--pf-global--spacer--md);
  --pf-c-switch__label--FontSize: var(--pf-c-switch--FontSize); // remove at breaking change period
  --pf-c-switch__label--FontWeight: var(--pf-global--FontWeight--normal); // this can be removed at breaking change period
  --pf-c-switch__label--LineHeight: var(--pf-c-switch--LineHeight); // this can be removed at breaking change period
  --pf-c-switch__label--Color: var(--pf-global--Color--dark-100);

  position: relative;
  display: inline-block;
  height: var(--pf-c-switch--Height);
  font-size: var(--pf-c-switch--FontSize);
  line-height: var(--pf-c-switch--LineHeight);
  vertical-align: middle;
  cursor: pointer;

  .pf-c-switch__input {
    position: absolute;
    cursor: pointer;
    opacity: 0;

    &:focus ~ .pf-c-switch__toggle {
      outline: var(--pf-c-switch__input--focus__toggle--OutlineWidth) solid var(--pf-c-switch__input--focus__toggle--OutlineColor);
      outline-offset: var(--pf-c-switch__input--focus__toggle--OutlineOffset);
    }

    /* stylelint-disable */
    &:checked {
      ~ .pf-c-switch__label {
        color: var(--pf-c-switch__input--checked__label--Color);
      }

      ~ .pf-c-switch__toggle {
        background-color: var(--pf-c-switch__input--checked__toggle--BackgroundColor);

        &::before {
          transform: var(--pf-c-switch__input--checked__toggle--before--Transform);
        }
      }

      ~ .pf-m-off {
        display: none;
      }
    }

    &:not(:checked) {
      ~ .pf-c-switch__label {
        color: var(--pf-c-switch__input--not-checked__label--Color);
      }

      ~ .pf-c-switch__toggle {
        .pf-c-switch__toggle-icon {
          display: none;
          visibility: hidden;
        }
      }

      ~ .pf-m-on {
        display: none;
      }
    }

    &:disabled {
      cursor: not-allowed;

      ~ .pf-c-switch__label {
        color: var(--pf-c-switch__input--disabled__label--Color);
        cursor: not-allowed;
      }

      ~ .pf-c-switch__toggle {
        cursor: not-allowed;
        background-color: var(--pf-c-switch__input--disabled__toggle--BackgroundColor);

        &::before {
          background-color: var(--pf-c-switch__input--disabled__toggle--before--BackgroundColor);
        }
      }
    }
  }
  /* stylelint-enable */

  .pf-c-switch__toggle {
    position: relative;
    display: inline-block;
    width: var(--pf-c-switch--Width);
    height: var(--pf-c-switch--Height);
    background-color: var(--pf-c-switch__toggle--BackgroundColor);
    border-radius: var(--pf-c-switch__toggle--BorderRadius);

    &::before {
      position: absolute;
      top: var(--pf-c-switch__toggle--before--Top);
      left: var(--pf-c-switch__toggle--before--Left);
      display: block;
      width: var(--pf-c-switch__toggle--before--Width);
      height: var(--pf-c-switch__toggle--before--Height);
      content: "";
      background-color: var(--pf-c-switch__toggle--before--BackgroundColor);
      border-radius: var(--pf-c-switch__toggle--before--BorderRadius);
      box-shadow: var(--pf-c-switch__toggle--before--BoxShadow);
      transition: var(--pf-c-switch__toggle--before--Transition);
    }
  }

  .pf-c-switch__toggle-icon {
    position: absolute;
    top: var(--pf-c-switch__toggle-icon--Top);
    left: var(--pf-c-switch__toggle-icon--Left);
    padding-left: var(--pf-c-switch__toggle-icon--PaddingLeft);
    font-size: var(--pf-c-switch__toggle-icon--FontSize);
    color: var(--pf-c-switch__toggle-icon--Color);
    transform: var(--pf-c-switch__toggle-icon--Transform);
  }

  .pf-c-switch__label {
    display: inline-block;
    padding-left: var(--pf-c-switch__label--PaddingLeft);
    font-weight: var(--pf-c-switch__label--FontWeight); // remove at breaking change
    line-height: var(--pf-c-switch__label--LineHeight); // remove at breaking change
    color: var(--pf-c-switch__label--Color);
    vertical-align: top;
  }
}
