:root,
:where(.#{$nav}) {
  // * Nav - base vars
  --#{$nav}--PaddingBlockStart: var(--pf-t--global--spacer--md);
  --#{$nav}--PaddingBlockEnd: var(--pf-t--global--spacer--md);
  --#{$nav}--PaddingInlineStart: var(--pf-t--global--spacer--md);
  --#{$nav}--PaddingInlineEnd: var(--pf-t--global--spacer--md);

  // * Nav - mapped vars
  --#{$nav}--PaddingBlock: var(--#{$nav}--PaddingBlockStart) var(--#{$nav}--PaddingBlockEnd);
  --#{$nav}--PaddingInline: var(--#{$nav}--PaddingInlineStart) var(--#{$nav}--PaddingInlineEnd);

  // * Nav
  --#{$nav}--RowGap: var(--pf-t--global--spacer--lg);
  --#{$nav}--ColumnGap: var(--pf-t--global--spacer--sm);
  --#{$nav}--AlignItems: baseline;
  --#{$nav}--FontSize: var(--pf-t--global--font--size--body);
  --#{$nav}--FontWeight: var(--pf-t--global--font--weight--body);
  --#{$nav}--LineHeight: var(--pf-t--global--font--line-height--body);
  --#{$nav}--BackgroundColor: var(--pf-t--global--background--color--secondary--default);
  --#{$nav}--Transition: var(--#{$pf-global}--Transition); // TODO: replace with global variable when available

  // * Nav list
  --#{$nav}__list--RowGap: var(--pf-t--global--spacer--sm); // shared value for standard nav children
  --#{$nav}__list--ColumnGap: var(--pf-t--global--spacer--xs);
  --#{$nav}__list--ScrollSnapTypeAxis: x;
  --#{$nav}__list--ScrollSnapTypeStrictness: proximity;
  --#{$nav}__list--ScrollSnapType: var(--#{$nav}__list--ScrollSnapTypeAxis) var(--#{$nav}__list--ScrollSnapTypeStrictness);
  --#{$nav}__item--ScrollSnapAlign: end;

  // * Nav section title
  --#{$nav}__section-title--FontSize: var(--pf-t--global--font--size--body--md);
  --#{$nav}__section-title--FontWeight: var(--pf-t--global--font--weight--body--bold);
  --#{$nav}__section-title--Color: var(--pf-t--global--text--color--regular);

  // * Nav toggle icon
  --#{$nav}__item--RowGap: var(--#{$nav}__list--RowGap);
  --#{$nav}__item__toggle-icon--Rotate: 0;
  --#{$nav}__item--m-expanded__toggle-icon--Rotate: 90deg;

  // * Nav item expandable
  --#{$nav}__item--m-expanded--MarginBlockEnd: var(--pf-t--global--spacer--sm);

  // * Nav - base vars
  --#{$nav}__link--PaddingBlockStart: var(--pf-t--global--spacer--sm); // shared value for standard nav children
  --#{$nav}__link--PaddingBlockEnd: var(--pf-t--global--spacer--sm); // shared value for standard nav children
  --#{$nav}__link--PaddingInlineStart: var(--pf-t--global--spacer--md); // shared value for standard nav children
  --#{$nav}__link--PaddingInlineEnd: var(--pf-t--global--spacer--md); // shared value for standard nav children

  // * Nav - mapped vars
  --#{$nav}__link--PaddingBlock: var(--#{$nav}__link--PaddingBlockStart) var(--#{$nav}__link--PaddingBlockEnd); // shared value for standard nav children
  --#{$nav}__link--PaddingInline: var(--#{$nav}__link--PaddingInlineStart) var(--#{$nav}__link--PaddingInlineEnd); // shared value for standard nav children

  // * Nav link
  --#{$nav}__link--BorderRadius: var(--pf-t--global--border--radius--small);
  --#{$nav}__link--BackgroundColor: var(--pf-t--global--background--color--action--plain--default);
  --#{$nav}__link--WhiteSpace: normal;
  --#{$nav}__link--Color: var(--pf-t--global--text--color--subtle);
  --#{$nav}__link--hover--Color: var(--pf-t--global--text--color--regular);
  --#{$nav}__link--focus--Color: var(--pf-t--global--text--color--regular);
  --#{$nav}__link--active--Color: var(--pf-t--global--text--color--regular);
  --#{$nav}__link--hover--BackgroundColor: var(--pf-t--global--background--color--action--plain--alt--hover);
  --#{$nav}__link--focus--BackgroundColor: var(--pf-t--global--background--color--action--plain--alt--hover);
  --#{$nav}__link--active--BackgroundColor: var(--pf-t--global--background--color--action--plain--alt--hover);
  --#{$nav}__link--m-current--BackgroundColor: var(--pf-t--global--background--color--action--plain--alt--clicked);
  --#{$nav}__link--m-current--Color: var(--pf-t--global--text--color--regular);

  // * Nav subnav
  --#{$nav}__subnav--RowGap: var(--pf-t--global--border--width--extra-strong);
  --#{$nav}__subnav--PaddingInlineStart: var(--pf-t--global--spacer--lg);

  // * Nav scroll button
  --#{$nav}__scroll-button--MinWidth: #{$pf-v5-global--target-size--MinWidth};
  --#{$nav}__scroll-button--BorderColor: var(--pf-t--global--border--color--default);
  --#{$nav}__scroll-button--BorderWidth: var(--pf-t--global--border--width--divider--default);
  --#{$nav}__scroll-button--BorderRadius: var(--pf-t--global--border--radius--pill);

  // * Nav toggle
  --#{$nav}__toggle--PaddingInlineStart: var(--pf-t--global--spacer--sm);
  --#{$nav}__toggle--PaddingInlineEnd: var(--pf-t--global--spacer--sm);
  --#{$nav}__toggle--TranslateY: calc((var(--#{$nav}--LineHeight) * var(--#{$nav}--FontSize) / 2 ) - 50%); // find height of single label, divide by two, offset by 50% of own height

  // * Nav link clickable inset
  --#{$nav}__link--clickable-inset--InlineStart: 0;
  --#{$nav}__link--clickable-inset--InlineEnd: 0;
  --#{$nav}__link--clickable-inset--Inline: var(--#{$nav}__link--clickable-inset--InlineStart) var(--#{$nav}__link--clickable-inset--InlineEnd);

  // * Nav horizontal
  --#{$nav}--m-horizontal--BorderRadius: var(--pf-t--global--border--radius--pill);

  // * Nav horizontal list
  --#{$nav}--m-horizontal__list--ColumnGap: var(--pf-t--global--spacer--xs);

  // * Nav horizontal list - base vars
  --#{$nav}--m-horizontal__list--PaddingBlockStart: var(--pf-t--global--spacer--sm);
  --#{$nav}--m-horizontal__list--PaddingBlockEnd: var(--pf-t--global--spacer--sm);
  --#{$nav}--m-horizontal__list--PaddingInlineStart: var(--pf-t--global--spacer--md);
  --#{$nav}--m-horizontal__list--PaddingInlineEnd: var(--pf-t--global--spacer--md);

  // * Nav horizontal list - mapped vars
  --#{$nav}--m-horizontal__list--PaddingBlock: var(--#{$nav}--m-horizontal__list--PaddingBlockStart) var(--#{$nav}--m-horizontal__list--PaddingBlockEnd);
  --#{$nav}--m-horizontal__list--PaddingInline: var(--#{$nav}--m-horizontal__list--PaddingInlineStart) var(--#{$nav}--m-horizontal__list--PaddingInlineEnd);

  // * Nav horizontal link - base vars
  --#{$nav}--m-horizontal--m-subnav__link--PaddingBlockStart: var(--pf-t--global--spacer--xs);
  --#{$nav}--m-horizontal--m-subnav__link--PaddingBlockEnd: var(--pf-t--global--spacer--xs);
  --#{$nav}--m-horizontal--m-subnav__link--PaddingInlineStart: var(--pf-t--global--spacer--md);
  --#{$nav}--m-horizontal--m-subnav__link--PaddingInlineEnd: var(--pf-t--global--spacer--md);

  // * Nav horizontal link - mapped vars
  --#{$nav}--m-horizontal--m-subnav__link--PaddingBlock: var(--#{$nav}--m-horizontal--m-subnav__list--PaddingBlockStart) var(--#{$nav}--m-horizontal--m-subnav__list--PaddingBlockEnd);
  --#{$nav}--m-horizontal--m-subnav__link--PaddingInline: var(--#{$nav}--m-horizontal--m-subnav__list--PaddingInlineStart) var(--#{$nav}--m-horizontal--m-subnav__list--PaddingInlineEnd);


  // * Nav horizontal subnav link
  --#{$nav}--m-horizontal--m-subnav__link--PaddingBlock: var(--#{$nav}--m-horizontal--m-subnav__list--PaddingBlockStart) var(--#{$nav}--m-horizontal--m-subnav__list--PaddingBlockEnd);

  // * Nav horizontal scrollable
  --pf-v5-c-nav--horizontal-scrollable--PaddingInlineStart: var(--pf-t--global--border--width--extra-strong);
}

.#{$nav},
.#{$nav}__section,
.#{$nav}__subnav,
.#{$nav}__list,
.#{$nav}__item {
  display: grid;
}

// Transition interactive elements
.#{$nav}__subnav,
.#{$nav}__list,
.#{$nav}__item,
.#{$nav}__link,
.#{$nav}__toggle-icon {
  transition: var(--#{$nav}--Transition);
}

// - Nav root
.#{$nav} {
  --#{$menu}--MinWidth: 100%;

  position: relative;
  row-gap: var(--#{$nav}--RowGap);
  max-width: 100%;
  padding-block: var(--#{$nav}--PaddingBlock);
  padding-inline: var(--#{$nav}--PaddingInline);
  font-size: var(--#{$nav}--FontSize);
  font-weight: var(--#{$nav}--FontWeight);
  line-height: var(--#{$nav}--LineHeight);
  background-color: var(--#{$nav}--BackgroundColor);

  &:where(.pf-m-scrollable) {
    padding-inline: var(--#{$nav}--m-scrollable__list--PaddingInline);
  }

  &.pf-m-overflow-hidden {
    overflow: hidden;
  }

  &.pf-m-full-width {
    width: 100%;
  }

  &.pf-m-fill {
    flex-grow: 1;
  }

}

[class^="#{$nav}"][hidden] {
  display: none;
}

// Magic value calcs
.#{$nav}__nav,
.#{$nav}__list,
.#{$nav}__subnav {
  // These variables need to remove local to list and subnav to be recalculated upon row gap setting updates
  --#{$nav}__item--RowGap--row-offset: calc(var(--#{$nav}__list--RowGap) / 2 * -1); // row gap offset calcs 1/2 height of row gap
  --#{$nav}__link--clickable-inset--Block: var(--#{$nav}__item--RowGap--row-offset); // set link's clickable area offset based on 1/2 row gap
  --#{$nav}__button--RowGap--row-offset: calc(var(--#{$nav}__item--RowGap) * -1); // match extra bottom paddings applied to expanded nav_links
}

// - Nav list
.#{$nav}__list {
  row-gap: var(--#{$nav}__list--RowGap);
  column-gap: var(--#{$nav}__list--ColumnGap);
}

// - Nav subnav
.#{$nav}__subnav {
  --#{$nav}__list--RowGap: var(--#{$nav}__subnav--RowGap); // this value is passed to --#{$nav}__item--RowGap--row-offset and updates clickable area based on value passed

  padding-inline-start: var(--#{$nav}__subnav--PaddingInlineStart); // indent nested lists
}

// - Nav item
.#{$nav}__item {
  row-gap: var(--#{$nav}__item--RowGap); // no fallback here as this value is used to calc clickable offsets
  scroll-snap-align: var(--#{$nav}__item--ScrollSnapAlign);

  > .#{$nav}__link[button] {
    margin-block-end: var(--#{$nav}__button--RowGap--row-offset);
  }

  &.pf-m-expanded:where(:is(:not(:only-child, :last-child))) {
    margin-block-end: var(--#{$nav}__item--RowGap);

    + .#{$nav}__item > .#{$nav}__link::before {
      inset-block-start: calc(var(--#{$nav}__item--RowGap) * -1 - var(--#{$nav}__list--RowGap));
    }
  }
}

// - Nav section
.#{$nav}__section {
  row-gap: var(--#{$nav}__section--RowGap, var(--#{$nav}__list--RowGap));
}

// - Nav section title
.#{$nav}__section-title {
  padding-inline: var(--#{$nav}__section-title--PaddingInline, var(--#{$nav}__link--PaddingInline));
  font-size: var(--#{$nav}__section-title--FontSize);
  font-weight: var(--#{$nav}__section-title--FontWeight);
  color: var(--#{$nav}__section-title--Color);
}

// - Nav link
.#{$nav}__link {
  position: relative;
  display: flex;
  column-gap: var(--#{$nav}__link--ColumnGap, var(--#{$nav}--ColumnGap));
  align-items: var(--#{$nav}__link--AlignItems, var(--#{$nav}--AlignItems));
  padding-block: var(--#{$nav}__link--PaddingBlock);
  padding-inline: var(--#{$nav}__link--PaddingInline);
  font-size: var(--#{$nav}__link--FontSize, inherit);
  font-weight: var(--#{$nav}__link--FontWeight, inherit);
  line-height: var(--#{$nav}__link--LineHeight, inherit);
  color: var(--#{$nav}__link--Color);
  background-color: var(--#{$nav}__link--BackgroundColor);
  border: none;
  border-radius: var(--#{$nav}__link--BorderRadius);

  // adjust clickable target area to consume space between items to prevent cursor flicker
  &::before {
    position: absolute;
    inset-block: var(--#{$nav}__link--clickable-inset--Block);
    inset-inline: var(--#{$nav}__link--clickable-inset--Inline);
    content: "";
  }

  &[aria-expanded="true"]::before {
    inset-block-end: calc(var(--#{$nav}__item--RowGap) * -1);
  }

  // explicitly set background-color prop to avoid affecting child elements settings
  &:hover,
  &.pf-m-hover {
    color: var(--#{$nav}__link--hover--Color);
    background-color: var(--#{$nav}__link--hover--BackgroundColor);
  }

  &:focus {
    color: var(--#{$nav}__link--focus--Color);
    background-color: var(--#{$nav}__link--focus--BackgroundColor);
  }

  &:active {
    color: var(--#{$nav}__link--active--Color);
    background-color: var(--#{$nav}__link--active--BackgroundColor);
  }

  &.pf-m-current,
  &.pf-m-current:hover {
    color: var(--#{$nav}__link--m-current--Color);
    background-color: var(--#{$nav}__link--m-current--BackgroundColor);
  }
}

// - Nav toggle caret
.#{$nav}__toggle {
  flex: none;
  align-self: start;
  margin-inline-start: auto;

  // find height of single text string, divide by two, offset by 50% of own height
  transform: translateY(var(--#{$nav}__toggle--TranslateY));
}

// - Nav toggle icon
.#{$nav}__toggle-icon {
  display: inline-block;
  transform: rotate(var(--#{$nav}__item__toggle-icon--Rotate));

  @include pf-v5-mirror-inline-on-rtl;

  .#{$nav}__item:where(.pf-m-flyout) & {
    --#{$nav}__item--m-expanded__toggle-icon--Rotate: 0;
  }

  .#{$nav}__link:where([aria-expanded="true"]) & {
    transform: rotate(var(--#{$nav}__item--m-expanded__toggle-icon--Rotate));
  }
}

// - Nav scroll buttons
.#{$nav}__scroll-button {
  --#{$button}--Display: flex;
  --#{$button}--Flex: 1;
  --#{$button}--AlignItems: center;
  --#{$button}--JustifyContent: center;

  // - Nav button
  position: relative;
  display: flex;
  flex: none;
  align-items: stretch;
  justify-items: stretch;
  min-width: var(--#{$nav}__scroll-button--MinWidth);

  &::before {
    position: absolute;
    inset-block: 0;
    inset-inline: 0;
    content: "";
  }

  &:nth-of-type(1) {
    --#{$button}--start-start--Radius--BorderRadius: var(--#{$nav}__scroll-button--BorderRadius);
    --#{$button}--start-end--Radius--BorderRadius: 0;
    --#{$button}--end-start--Radius--BorderRadius: var(--#{$nav}__scroll-button--BorderRadius);
    --#{$button}--end-end--Radius--BorderRadius: 0;

    border-start-start-radius: var(--#{$nav}__scroll-button--BorderRadius);
    border-end-start-radius: var(--#{$nav}__scroll-button--BorderRadius);

    &::before {
      border-inline-end: var(--#{$nav}__scroll-button--BorderWidth) solid var(--#{$nav}__scroll-button--BorderColor);
    }
  }

  &:nth-of-type(2) {
    --#{$button}--start-start--Radius--BorderRadius: 0;
    --#{$button}--start-end--Radius--BorderRadius: var(--#{$nav}__scroll-button--BorderRadius);
    --#{$button}--end-start--Radius--BorderRadius: 0;
    --#{$button}--end-end--Radius--BorderRadius: var(--#{$nav}__scroll-button--BorderRadius);

    border-start-end-radius: var(--#{$nav}__scroll-button--BorderRadius);
    border-end-end-radius: var(--#{$nav}__scroll-button--BorderRadius);

    &::before {
      border-inline-start: var(--#{$nav}__scroll-button--BorderWidth) solid var(--#{$nav}__scroll-button--BorderColor);
    }
  }
}

// - Nav horizontal
.#{$nav}:where(.pf-m-horizontal) {
  padding: 0;
  overflow: hidden;
  border-radius: var(--#{$nav}--m-horizontal--BorderRadius);

  &, // - Nav horizontal
  .#{$nav}__section, // - Nav horizontal section
  .#{$nav}__subnav, // - Nav horizontal subnav
  .#{$nav}__list, // - Nav horizontal list
  .#{$nav}__item { // - Nav horizontal item
    display: flex;
  }

  // - Nav horizontal list
  .#{$nav}__list {
    padding-block: var(--#{$nav}--m-horizontal__list--PaddingBlock);
    padding-inline: var(--#{$nav}--m-horizontal__list--PaddingInline);
    overflow-x: auto;
    white-space: nowrap;
    scroll-snap-type: var(--#{$nav}__list--ScrollSnapType);
    -webkit-overflow-scrolling: touch;

    @include pf-v5-overflow-hide-scroll;
  }

  // - Nav link before
  .#{$nav}__link::before {
    // offset vertical clickable area by list padding start/end
    inset-block-start: calc(var(--#{$nav}--m-horizontal__list--PaddingBlockStart) * -1);
    inset-block-end: calc(var(--#{$nav}--m-horizontal__list--PaddingBlockEnd) * -1);
    inset-inline-start: calc(var(--#{$nav}--m-horizontal__list--ColumnGap) / 2 * -1);
    inset-inline-end: calc(var(--#{$nav}--m-horizontal__list--ColumnGap) / 2 * -1);
  }

  // - Nav subnav
  &.pf-m-subnav {
    // - Nav subnav link
    --#{$nav}__link--PaddingBlock: var(--#{$nav}--m-horizontal--m-subnav__link--PaddingBlock);

    // - Nav subnav list
    --#{$nav}__list--PaddingBlock: var(--#{$nav}--m-horizontal--m-subnav__list--PaddingBlockStart) var(--#{$nav}--m-horizontal--m-subnav__list--PaddingBlockEnd);
    --#{$nav}__list--PaddingInline: var(--#{$nav}--m-horizontal--m-subnav__list--PaddingInlineStart) var(--#{$nav}--m-horizontal--m-subnav__list--PaddingInlineStart);
  }

  // - Nav scrollable
  .#{$nav}__scroll-button + .#{$nav}__list {
    padding-inline-start: var(--pf-v5-c-nav--horizontal-scrollable--PaddingInlineStart);

    // offset clickable area for first child by padding update
    > :first-child .#{$nav}__link::before {
      inset-inline-start: calc(var(--#{$nav}--m-horizontal__list--ColumnGap) / 2 * -1 - var(--pf-v5-c-nav--horizontal-scrollable--PaddingInlineStart));
    }
  }
}
