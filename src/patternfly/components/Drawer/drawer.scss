// @debug $drawer; // check your variable names located in src/patternfly/sass-utilities/component-namespaces.scss
$pf-v5-c-drawer--breakpoint-map: build-breakpoint-map("base", "lg", "xl", "2xl");
$pf-v5-c-drawer--breakpoint-map--width: build-breakpoint-map("base", "lg", "xl", "2xl");
$pf-v5-c-drawer__panel--list--width: (25, 33, 50, 66, 75, 100);

.#{$drawer} {
  // Section
  --#{$drawer}__section--BackgroundColor: var(--#{$pf-global}--BackgroundColor--100);
  --#{$drawer}__section--m-light-200--BackgroundColor: var(--#{$pf-global}--BackgroundColor--200);

  // Content
  --#{$drawer}__content--FlexBasis: 100%;
  --#{$drawer}__content--BackgroundColor: var(--#{$pf-global}--BackgroundColor--100);
  --#{$drawer}__content--m-light-200--BackgroundColor: var(--#{$pf-global}--BackgroundColor--200);
  --#{$drawer}__content--ZIndex: var(--#{$pf-global}--ZIndex--xs);

  // Panel
  --#{$drawer}__panel--MinWidth: 50%; // change to __panel--md--MinWidth at breaking change
  --#{$drawer}__panel--MaxHeight: auto;
  --#{$drawer}__panel--ZIndex: var(--#{$pf-global}--ZIndex--sm);
  --#{$drawer}__panel--BackgroundColor: var(--#{$pf-global}--BackgroundColor--100);
  --#{$drawer}__panel--m-light-200--BackgroundColor: var(--#{$pf-global}--BackgroundColor--200);
  --#{$drawer}__panel--TransitionDuration: var(--#{$pf-global}--TransitionDuration);
  --#{$drawer}__panel--TransitionProperty: margin, transform, box-shadow, flex-basis;
  --#{$drawer}__panel--FlexBasis: 100%;
  --#{$drawer}__panel--md--FlexBasis--min: #{pf-size-prem(24px)};
  --#{$drawer}__panel--md--FlexBasis: 50%;
  --#{$drawer}__panel--md--FlexBasis--max: 100%;
  --#{$drawer}__panel--xl--MinWidth: #{pf-size-prem(450px)};
  --#{$drawer}__panel--xl--FlexBasis: #{pf-size-prem(450px)};
  --#{$drawer}--m-panel-bottom__panel--md--MinHeight: 50%;
  --#{$drawer}--m-panel-bottom__panel--xl--MinHeight: #{pf-size-prem(300px)};
  --#{$drawer}--m-panel-bottom__panel--xl--FlexBasis: #{pf-size-prem(300px)};
  --#{$drawer}__panel--m-resizable--FlexDirection: row;
  --#{$drawer}__panel--m-resizable--md--FlexBasis--min: var(--#{$drawer}__splitter--m-vertical--Width);
  --#{$drawer}__panel--m-resizable--MinWidth: #{pf-size-prem(24px)};
  --#{$drawer}--m-panel-bottom__panel--m-resizable--FlexDirection: column;
  --#{$drawer}--m-panel-bottom__panel--m-resizable--md--FlexBasis--min: #{pf-size-prem(24px)};
  --#{$drawer}--m-panel-bottom__panel--m-resizable--MinHeight: #{pf-size-prem(24px)};

  // Child padding
  --#{$drawer}--child--PaddingTop: var(--#{$pf-global}--spacer--md);
  --#{$drawer}--child--PaddingRight: var(--#{$pf-global}--spacer--md);
  --#{$drawer}--child--PaddingBottom: var(--#{$pf-global}--spacer--md);
  --#{$drawer}--child--PaddingLeft: var(--#{$pf-global}--spacer--md);

  // Responsive child padding
  --#{$drawer}--child--md--PaddingTop: var(--#{$pf-global}--spacer--lg);
  --#{$drawer}--child--md--PaddingRight: var(--#{$pf-global}--spacer--lg);
  --#{$drawer}--child--md--PaddingBottom: var(--#{$pf-global}--spacer--lg);
  --#{$drawer}--child--md--PaddingLeft: var(--#{$pf-global}--spacer--lg);

  // Modified padding, child padding
  --#{$drawer}--child--m-padding--PaddingTop: var(--#{$pf-global}--spacer--md);
  --#{$drawer}--child--m-padding--PaddingRight: var(--#{$pf-global}--spacer--md);
  --#{$drawer}--child--m-padding--PaddingBottom: var(--#{$pf-global}--spacer--md);
  --#{$drawer}--child--m-padding--PaddingLeft: var(--#{$pf-global}--spacer--md);

  // Responsive, modified padding, child padding
  --#{$drawer}--child--m-padding--md--PaddingTop: var(--#{$pf-global}--spacer--lg);
  --#{$drawer}--child--m-padding--md--PaddingRight: var(--#{$pf-global}--spacer--lg);
  --#{$drawer}--child--m-padding--md--PaddingBottom: var(--#{$pf-global}--spacer--lg);
  --#{$drawer}--child--m-padding--md--PaddingLeft: var(--#{$pf-global}--spacer--lg);

  // Content
  --#{$drawer}__content--child--PaddingTop: 0;
  --#{$drawer}__content--child--PaddingRight: 0;
  --#{$drawer}__content--child--PaddingBottom: 0;
  --#{$drawer}__content--child--PaddingLeft: 0;

  // Splitter
  --#{$drawer}__splitter--Height: #{pf-size-prem(9px)};
  --#{$drawer}__splitter--Width: 100%;
  --#{$drawer}__splitter--BackgroundColor: var(--#{$pf-global}--BackgroundColor--100);
  --#{$drawer}__splitter--Cursor: row-resize;
  --#{$drawer}__splitter--m-vertical--Height: 100%;
  --#{$drawer}__splitter--m-vertical--Width: #{pf-size-prem(9px)};
  --#{$drawer}__splitter--m-vertical--Cursor: col-resize;
  --#{$drawer}--m-inline__splitter--focus--OutlineOffset: #{pf-size-prem(-1px)};

  // Splitter border
  --#{$drawer}__splitter--after--BorderColor: var(--#{$pf-global}--BorderColor--100);
  --#{$drawer}__splitter--after--border-width--base: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}__splitter--after--BorderTopWidth: 0;
  --#{$drawer}__splitter--after--BorderRightWidth: var(--#{$drawer}__splitter--after--border-width--base);
  --#{$drawer}__splitter--after--BorderBottomWidth: 0;
  --#{$drawer}__splitter--after--BorderLeftWidth: 0;
  --#{$drawer}--m-panel-left__splitter--after--BorderLeftWidth: var(--#{$drawer}__splitter--after--border-width--base);
  --#{$drawer}--m-panel-bottom__splitter--after--BorderBottomWidth: var(--#{$drawer}__splitter--after--border-width--base);
  --#{$drawer}--m-inline__splitter--m-vertical--Width: #{pf-size-prem(10px)};
  --#{$drawer}--m-inline__splitter-handle--Left: 50%;
  --#{$drawer}--m-inline__splitter--after--BorderRightWidth: var(--#{$drawer}__splitter--after--border-width--base);
  --#{$drawer}--m-inline__splitter--after--BorderLeftWidth: var(--#{$drawer}__splitter--after--border-width--base);
  --#{$drawer}--m-inline--m-panel-bottom__splitter--Height: #{pf-size-prem(10px)};
  --#{$drawer}--m-inline--m-panel-bottom__splitter-handle--Top: 50%;
  --#{$drawer}--m-inline--m-panel-bottom__splitter--after--BorderTopWidth: var(--#{$drawer}__splitter--after--border-width--base);

  // Splitter handle
  --#{$drawer}__splitter-handle--Top: 50%;
  --#{$drawer}__splitter-handle--Left: calc(50% - var(--#{$drawer}__splitter--after--border-width--base));
  --#{$drawer}--m-panel-left__splitter-handle--Left: 50%;
  --#{$drawer}--m-panel-bottom__splitter-handle--Top: calc(50% - var(--#{$drawer}__splitter--after--border-width--base));

  // Splitter handle line
  --#{$drawer}__splitter-handle--after--BorderColor: var(--#{$pf-global}--Color--200);
  --#{$drawer}__splitter-handle--after--BorderTopWidth: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}__splitter-handle--after--BorderRightWidth: 0;
  --#{$drawer}__splitter-handle--after--BorderBottomWidth: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}__splitter-handle--after--BorderLeftWidth: 0;
  --#{$drawer}__splitter--hover__splitter-handle--after--BorderColor: var(--#{$pf-global}--Color--100);
  --#{$drawer}__splitter--focus__splitter-handle--after--BorderColor: var(--#{$pf-global}--Color--100);
  --#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderTopWidth: 0;
  --#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderRightWidth: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderBottomWidth: 0;
  --#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderLeftWidth: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}__splitter-handle--after--Width: #{pf-size-prem(12px)};
  --#{$drawer}__splitter-handle--after--Height: #{pf-size-prem(4px)};
  --#{$drawer}__splitter--m-vertical__splitter-handle--after--Width: #{pf-size-prem(4px)};
  --#{$drawer}__splitter--m-vertical__splitter-handle--after--Height: #{pf-size-prem(12px)};

  @media screen and (min-width: $pf-v5-global--breakpoint--md) {
    // Responsive child padding
    --#{$drawer}--child--PaddingTop: var(--#{$drawer}--child--md--PaddingTop);
    --#{$drawer}--child--PaddingRight: var(--#{$drawer}--child--md--PaddingRight);
    --#{$drawer}--child--PaddingBottom: var(--#{$drawer}--child--md--PaddingBottom);
    --#{$drawer}--child--PaddingLeft: var(--#{$drawer}--child--md--PaddingLeft);

    // Responsive, modified padding, child padding
    --#{$drawer}--child--m-padding--PaddingTop: var(--#{$drawer}--child--m-padding--md--PaddingTop);
    --#{$drawer}--child--m-padding--PaddingRight: var(--#{$drawer}--child--m-padding--md--PaddingRight);
    --#{$drawer}--child--m-padding--PaddingBottom: var(--#{$drawer}--child--m-padding--md--PaddingBottom);
    --#{$drawer}--child--m-padding--PaddingLeft: var(--#{$drawer}--child--m-padding--md--PaddingLeft);
  }

  @media screen and (min-width: $pf-v5-global--breakpoint--xl) {
    --#{$drawer}__panel--MinWidth: var(--#{$drawer}__panel--xl--MinWidth);

    &.pf-m-panel-bottom {
      --#{$drawer}__panel--MinWidth: auto;
      --#{$drawer}__panel--MinHeight: var(--#{$drawer}--m-panel-bottom__panel--xl--MinHeight);
    }
  }

  // Actions
  --#{$drawer}__actions--MarginTop: calc(var(--#{$pf-global}--spacer--form-element) * -1);
  --#{$drawer}__actions--MarginRight: calc(var(--#{$pf-global}--spacer--form-element) * -1);

  // Box shadow
  --#{$drawer}__panel--BoxShadow: none;
  --#{$drawer}--m-expanded--m-panel-bottom__panel--BoxShadow: var(--#{$pf-global}--BoxShadow--lg-top);

  @include pf-v5-bidirectional-style(
    $prop: --#{$drawer}--m-expanded__panel--BoxShadow,
    $ltr-val: var(--#{$pf-global}--BoxShadow--lg-left),
    $rtl-val: var(--#{$pf-global}--BoxShadow--lg-right)
  ); 
  @include pf-v5-bidirectional-style(
    $prop: --#{$drawer}--m-expanded--m-panel-left__panel--BoxShadow,
    $ltr-val: var(--#{$pf-global}--BoxShadow--lg-right),
    $rtl-val: var(--#{$pf-global}--BoxShadow--lg-left)
  ); 

  // Divider
  --#{$drawer}__panel--after--Width: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}--m-panel-bottom__panel--after--Height: var(--#{$pf-global}--BorderWidth--sm);
  --#{$drawer}__panel--after--BackgroundColor: transparent;
  --#{$drawer}--m-inline--m-expanded__panel--after--BackgroundColor: var(--#{$pf-global}--BorderColor--100);
  --#{$drawer}--m-inline__panel--PaddingLeft: var(--#{$drawer}__panel--after--Width);
  --#{$drawer}--m-panel-left--m-inline__panel--PaddingRight: var(--#{$drawer}__panel--after--Width);
  --#{$drawer}--m-panel-bottom--m-inline__panel--PaddingTop: var(--#{$drawer}__panel--after--Width);

  display: flex;
  flex-direction: column;
  height: 100%;
  overflow-x: hidden;

  &.pf-m-inline,
  &.pf-m-static {
    > .#{$drawer}__main > .#{$drawer}__panel:not(.pf-m-no-border, .pf-m-resizable) {
      padding-inline-start: var(--#{$drawer}--m-inline__panel--PaddingLeft);
    }
  }

  &.pf-m-panel-left > .#{$drawer}__main {
    > .#{$drawer}__panel {
      order: 0;
      margin-inline-end: calc(var(--#{$drawer}__panel--FlexBasis) * -1);

      @include pf-v5-bidirectional-style(
        $prop: transform,
        $ltr-val: translateX(-100%),
        $rtl-val: translateX(#{pf-v5-calc-inverse(-100%)}),
      ); 
    }

    > .#{$drawer}__content {
      order: 1;
    }
  }

  &.pf-m-panel-bottom > .#{$drawer}__main {
    flex-direction: column;
  }

  // Expanded
  // stylelint-disable selector-max-class
  &.pf-m-expanded {
    > .#{$drawer}__main > .#{$drawer}__panel {
      @include pf-v5-bidirectional-style(
        $prop: transform,
        $ltr-val: translateX(-100%),
        $rtl-val: translateX(#{pf-v5-calc-inverse(-100%)}),
      ); 
    }

    &.pf-m-panel-left > .#{$drawer}__main > .#{$drawer}__panel {
      transform: translateX(0);
    }

    &.pf-m-panel-bottom > .#{$drawer}__main > .#{$drawer}__panel {
      transform: translate(0, -100%);
    }
  }
  // stylelint-enable

  &.pf-m-resizing {
    --#{$drawer}__panel--TransitionProperty: none;

    pointer-events: none;

    .#{$drawer}__splitter {
      pointer-events: auto;
    }
  }
}

// Header area
.#{$drawer}__section {
  flex-grow: 0;
  background-color: var(--#{$drawer}__section--BackgroundColor);

  &.pf-m-no-background {
    --#{$drawer}__section--BackgroundColor: transparent;
  }

  &.pf-m-light-200 {
    --#{$drawer}__section--BackgroundColor: var(--#{$drawer}__section--m-light-200--BackgroundColor);
  }
}

// Main area
.#{$drawer}__main {
  display: flex;
  flex: 1;
  overflow: hidden;
}

// Content / panel
.#{$drawer}__content,
.#{$drawer}__panel,
.#{$drawer}__panel-main {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  overflow: auto;
}

// Content
.#{$drawer}__content {
  z-index: var(--#{$drawer}__content--ZIndex);
  flex-basis: var(--#{$drawer}__content--FlexBasis);
  order: 0;
  background-color: var(--#{$drawer}__content--BackgroundColor);

  &.pf-m-no-background {
    --#{$drawer}__content--BackgroundColor: transparent;
  }

  &.pf-m-light-200 {
    --#{$drawer}__content--BackgroundColor: var(--#{$drawer}__content--m-light-200--BackgroundColor);
  }

  > .#{$drawer}__body {
    padding-block-start: var(--#{$drawer}__content--child--PaddingTop);
    padding-block-end: var(--#{$drawer}__content--child--PaddingBottom);
    padding-inline-start: var(--#{$drawer}__content--child--PaddingLeft);
    padding-inline-end: var(--#{$drawer}__content--child--PaddingRight);
  }
}

// Panel
.#{$drawer}__panel {
  position: relative;
  z-index: var(--#{$drawer}__panel--ZIndex);
  flex-basis: var(--#{$drawer}__panel--FlexBasis);
  order: 1;
  max-height: var(--#{$drawer}__panel--MaxHeight);
  overflow: auto;
  background-color: var(--#{$drawer}__panel--BackgroundColor);
  box-shadow: var(--#{$drawer}__panel--BoxShadow);
  transition-duration: var(--#{$drawer}__panel--TransitionDuration);
  transition-property: var(--#{$drawer}__panel--TransitionProperty);
  -webkit-overflow-scrolling: touch;

  &::after {
    position: absolute;
   inset-block-start: 0;
   inset-inline-start: 0;
    width: var(--#{$drawer}__panel--after--Width);
    height: 100%;
    content: "";
    background-color: var(--#{$drawer}__panel--after--BackgroundColor);
  }

  &.pf-m-no-background {
    --#{$drawer}__panel--BackgroundColor: transparent;
  }

  &.pf-m-light-200 {
    --#{$drawer}__panel--BackgroundColor: var(--#{$drawer}__panel--m-light-200--BackgroundColor);
  }

  @media screen and (min-width: $pf-v5-global--breakpoint--md) {
    --#{$drawer}__panel--FlexBasis:
      max(
        var(--#{$drawer}__panel--md--FlexBasis--min),
        min(var(--#{$drawer}__panel--md--FlexBasis), var(--#{$drawer}__panel--md--FlexBasis--max))
      );
  }

  @media screen and (min-width: $pf-v5-global--breakpoint--xl) {
    --#{$drawer}__panel--md--FlexBasis: var(--#{$drawer}__panel--xl--FlexBasis);

    .#{$drawer}.pf-m-panel-bottom & {
      --#{$drawer}__panel--md--FlexBasis: var(--#{$drawer}--m-panel-bottom__panel--xl--FlexBasis);
    }
  }
}

.#{$drawer}__panel-main {
  flex-grow: 1;
}

// Remove tab focus
@include pf-v5-animate-remove-tab-focus(".#{$drawer}__panel", var(--#{$drawer}__panel--TransitionDuration));

// Panel head
.#{$drawer}__head {
  display: grid;
  grid-template-columns: auto;
  grid-auto-columns: max-content;

  > * {
    grid-column: 1;
  }
}

// Panel actions
.#{$drawer}__actions {
  display: flex;
  grid-row: 1;
  grid-column: 2;
  align-self: baseline;
  margin-block-start: var(--#{$drawer}__actions--MarginTop);
  margin-inline-end: var(--#{$drawer}__actions--MarginRight);
}

// Modified content children
.#{$drawer}__body {
  padding-block-start: var(--#{$drawer}--child--PaddingTop);
  padding-block-end: var(--#{$drawer}--child--PaddingBottom);
  padding-inline-start: var(--#{$drawer}--child--PaddingLeft);
  padding-inline-end: var(--#{$drawer}--child--PaddingRight);

  // No padding
  &.pf-m-no-padding {
    padding: 0;

    > .#{$drawer}__actions,
    > .#{$drawer}__head > .#{$drawer}__actions {
      margin-block-start: 0;
      margin-inline-end: 0;
    }
  }

  // Padding
  &.pf-m-padding {
    padding-block-start: var(--#{$drawer}--child--m-padding--PaddingTop);
    padding-block-end: var(--#{$drawer}--child--m-padding--PaddingBottom);
    padding-inline-start: var(--#{$drawer}--child--m-padding--PaddingLeft);
    padding-inline-end: var(--#{$drawer}--child--m-padding--PaddingRight);
  }

  &:not(.pf-m-no-padding) + * {
    padding-block-start: 0;
  }

  &:last-child {
    flex: 1 1;
  }
}

// Page level drawer - move to page component in breaking change
.#{$drawer}__body > .#{$page}__main {
  height: 100%;
}

.#{$drawer}__splitter {
  position: relative;
  display: none;
  width: var(--#{$drawer}__splitter--Width);
  height: var(--#{$drawer}__splitter--Height);
  cursor: var(--#{$drawer}__splitter--Cursor);
  background-color: var(--#{$drawer}__splitter--BackgroundColor);

  &.pf-m-vertical {
    --#{$drawer}__splitter--Height: var(--#{$drawer}__splitter--m-vertical--Height);
    --#{$drawer}__splitter--Width: var(--#{$drawer}__splitter--m-vertical--Width);
    --#{$drawer}__splitter--Cursor: var(--#{$drawer}__splitter--m-vertical--Cursor);
    --#{$drawer}__splitter-handle--after--Width: var(--#{$drawer}__splitter--m-vertical__splitter-handle--after--Width);
    --#{$drawer}__splitter-handle--after--Height: var(--#{$drawer}__splitter--m-vertical__splitter-handle--after--Height);
    --#{$drawer}__splitter-handle--after--BorderTopWidth: var(--#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderTopWidth);
    --#{$drawer}__splitter-handle--after--BorderRightWidth: var(--#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderRightWidth);
    --#{$drawer}__splitter-handle--after--BorderBottomWidth: var(--#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderBottomWidth);
    --#{$drawer}__splitter-handle--after--BorderLeftWidth: var(--#{$drawer}__splitter--m-vertical__splitter-handle--after--BorderLeftWidth);
  }

  &:hover {
    --#{$drawer}__splitter-handle--after--BorderColor: var(--#{$drawer}__splitter--hover__splitter-handle--after--BorderColor);
  }

  &:focus {
    --#{$drawer}__splitter-handle--after--BorderColor: var(--#{$drawer}__splitter--focus__splitter-handle--after--BorderColor);
  }

  &::after {
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    inset-inline-end: 0;
    content: "";
    border: solid var(--#{$drawer}__splitter--after--BorderColor);
    border-block-start-width: var(--#{$drawer}__splitter--after--BorderTopWidth);
    border-block-end-width: var(--#{$drawer}__splitter--after--BorderBottomWidth);
    border-inline-start-width: var(--#{$drawer}__splitter--after--BorderLeftWidth);
    border-inline-end-width: var(--#{$drawer}__splitter--after--BorderRightWidth);
  }
}

.#{$drawer}__splitter-handle {
  position: absolute;
  inset-block-start: var(--#{$drawer}__splitter-handle--Top);
  inset-inline-start: var(--#{$drawer}__splitter-handle--Left);

  @include pf-v5-bidirectional-style(
    $prop: transform,
    $ltr-val: translate(-50%, -50%),
    $rtl-val: translate(#{pf-v5-calc-inverse(-50%)}, -50%),
  ); 


  &::after {
    display: block;
    width: var(--#{$drawer}__splitter-handle--after--Width);
    height: var(--#{$drawer}__splitter-handle--after--Height);
    content: "";
    border-color: var(--#{$drawer}__splitter-handle--after--BorderColor);
    border-style: solid;
    border-block-start-width: var(--#{$drawer}__splitter-handle--after--BorderTopWidth);
    border-block-end-width: var(--#{$drawer}__splitter-handle--after--BorderBottomWidth);
    border-inline-start-width: var(--#{$drawer}__splitter-handle--after--BorderLeftWidth);
    border-inline-end-width: var(--#{$drawer}__splitter-handle--after--BorderRightWidth);
  }
}

// Layout modifications happen after md breakpoint
@media screen and (min-width: $pf-v5-global--breakpoint--md) {
  // Default
  .#{$drawer} {
    min-width: var(--#{$drawer}__panel--MinWidth);

    // stylelint-disable selector-max-class
    // Expanded
    &.pf-m-expanded > .#{$drawer}__main {
      > .#{$drawer}__panel {
        box-shadow: var(--#{$drawer}--m-expanded__panel--BoxShadow);
      }
    }

    > .#{$drawer}__main > .#{$drawer}__panel.pf-m-resizable {
      --#{$drawer}__panel--md--FlexBasis--min: var(--#{$drawer}__panel--m-resizable--md--FlexBasis--min);

      flex-direction: var(--#{$drawer}__panel--m-resizable--FlexDirection);
      min-width: var(--#{$drawer}__panel--m-resizable--MinWidth);

      &::after {
        width: 0;
        height: 0;
      }

      > .#{$drawer}__splitter {
        flex-shrink: 0;
      }

      > .#{$drawer}__panel-main {
        flex-shrink: 1;
      }
    }
  }

  // Panel left
  .#{$drawer}.pf-m-panel-left {
    --#{$drawer}--m-expanded__panel--BoxShadow: var(--#{$drawer}--m-expanded--m-panel-left__panel--BoxShadow);

    &.pf-m-inline,
    &.pf-m-static {
      > .#{$drawer}__main > .#{$drawer}__panel:not(.pf-m-no-border, .pf-m-resizable) {
        padding-inline-start: 0;
        padding-inline-end: var(--#{$drawer}--m-panel-left--m-inline__panel--PaddingRight);
      }
    }

    &.pf-m-expanded > .#{$drawer}__main > .#{$drawer}__panel {
      transform: translateX(0);
    }

    > .#{$drawer}__main > .#{$drawer}__panel::after {
      inset-inline-start: auto;
      inset-inline-end: 0;
    }

    > .#{$drawer}__main > .#{$drawer}__panel.pf-m-resizable {
      > .#{$drawer}__splitter {
        --#{$drawer}__splitter-handle--Left: var(--#{$drawer}--m-panel-left__splitter-handle--Left);
        --#{$drawer}__splitter--after--BorderRightWidth: 0;
        --#{$drawer}__splitter--after--BorderLeftWidth: var(--#{$drawer}--m-panel-left__splitter--after--BorderLeftWidth);

        order: 1;
      }
    }
  }

  .#{$drawer}.pf-m-panel-bottom {
    --#{$drawer}--m-expanded__panel--BoxShadow: var(--#{$drawer}--m-expanded--m-panel-bottom__panel--BoxShadow);
    --#{$drawer}__panel--MaxHeight: 100%;
    --#{$drawer}__panel--FlexBasis--min: var(--#{$drawer}--m-panel-bottom__panel--FlexBasis--min);

    min-width: auto;
    min-height: var(--#{$drawer}--m-panel-bottom__panel--md--MinHeight);

    &.pf-m-inline,
    &.pf-m-static {
      > .#{$drawer}__main > .#{$drawer}__panel:not(.pf-m-no-border, .pf-m-resizable) {
        padding-block-start: var(--#{$drawer}--m-panel-bottom--m-inline__panel--PaddingTop);
        padding-inline-start: 0;
      }
    }

    > .#{$drawer}__main > .#{$drawer}__panel::after {
     inset-block-start: 0;
     inset-inline-start: auto;
      width: 100%;
      height: var(--#{$drawer}--m-panel-bottom__panel--after--Height);
    }

    > .#{$drawer}__main > .#{$drawer}__panel.pf-m-resizable {
      --#{$drawer}__panel--md--FlexBasis--min: var(--#{$drawer}--m-panel-bottom__panel--m-resizable--md--FlexBasis--min);
      --#{$drawer}__panel--m-resizable--FlexDirection: var(--#{$drawer}--m-panel-bottom__panel--m-resizable--FlexDirection);
      --#{$drawer}__panel--m-resizable--MinWidth: 0;

      min-height: var(--#{$drawer}--m-panel-bottom__panel--m-resizable--MinHeight);

      > .#{$drawer}__splitter {
        --#{$drawer}__splitter-handle--Top: var(--#{$drawer}--m-panel-bottom__splitter-handle--Top);
        --#{$drawer}__splitter--after--BorderRightWidth: 0;
        --#{$drawer}__splitter--after--BorderBottomWidth: var(--#{$drawer}--m-panel-bottom__splitter--after--BorderBottomWidth);
      }
    }
  }

  .#{$drawer}.pf-m-inline {
    > .#{$drawer}__main > .#{$drawer}__panel.pf-m-resizable {
      > .#{$drawer}__splitter {
        --#{$drawer}__splitter--m-vertical--Width: var(--#{$drawer}--m-inline__splitter--m-vertical--Width);
        --#{$drawer}__splitter-handle--Left: var(--#{$drawer}--m-inline__splitter-handle--Left);
        --#{$drawer}__splitter--after--BorderRightWidth: var(--#{$drawer}--m-inline__splitter--after--BorderRightWidth);
        --#{$drawer}__splitter--after--BorderLeftWidth: var(--#{$drawer}--m-inline__splitter--after--BorderLeftWidth);

        outline-offset: var(--#{$drawer}--m-inline__splitter--focus--OutlineOffset);
      }
    }

    &.pf-m-panel-bottom {
      > .#{$drawer}__main > .#{$drawer}__panel.pf-m-resizable {
        > .#{$drawer}__splitter {
          --#{$drawer}__splitter--Height: var(--#{$drawer}--m-inline--m-panel-bottom__splitter--Height);
          --#{$drawer}__splitter-handle--Top: var(--#{$drawer}--m-inline--m-panel-bottom__splitter-handle--Top);
          --#{$drawer}__splitter--after--BorderTopWidth: var(--#{$drawer}--m-inline--m-panel-bottom__splitter--after--BorderTopWidth);
          --#{$drawer}__splitter--after--BorderRightWidth: 0;
          --#{$drawer}__splitter--after--BorderLeftWidth: 0;
        }
      }
    }
  }

  // Border
  .#{$drawer} > .#{$drawer}__main > .#{$drawer}__panel.pf-m-no-border,
  .#{$drawer}.pf-m-panel-left > .#{$drawer}__main > .#{$drawer}__panel.pf-m-no-border {
    --#{$drawer}--m-expanded__panel--BoxShadow: none;
  }
  // stylelint-enable

  .#{$drawer}__splitter {
    display: block;
  }
}

// Responsive width modifiers
@each $breakpoint, $breakpoint-value in $pf-v5-c-drawer--breakpoint-map--width {
  $breakpoint-name: if($breakpoint != "base", -on-#{$breakpoint}, "");

  @if $breakpoint == "base" {
    $breakpoint: "md";
  }

  @include pf-v5-apply-breakpoint($breakpoint) {
    @each $width-value in $pf-v5-c-drawer__panel--list--width {
      .#{$drawer}__panel.pf-m-width-#{$width-value}#{$breakpoint-name} {
        --#{$drawer}__panel--md--FlexBasis: #{percentage(div($width-value, 100))};
      }
    }
  }
}

// Responsive modifiers
@each $breakpoint, $breakpoint-value in $pf-v5-c-drawer--breakpoint-map {
  $breakpoint-name: if($breakpoint != "base", -on-#{$breakpoint}, "");

  @if $breakpoint == "base" {
    $breakpoint: "md";
  }

  @include pf-v5-apply-breakpoint($breakpoint) {
    // Drawer and inline
    .#{$drawer}.pf-m-inline#{$breakpoint-name},
    .#{$drawer}.pf-m-static#{$breakpoint-name} {
      > .#{$drawer}__main > .#{$drawer}__content {
        flex-shrink: 1;
      }

      > .#{$drawer}__main > .#{$drawer}__panel {
        --#{$drawer}--m-expanded__panel--BoxShadow: none;

        &:not(.pf-m-no-border)::after {
          background-color: var(--#{$drawer}--m-inline--m-expanded__panel--after--BackgroundColor);
        }
      }
    }

    // Drawer inline
    .#{$drawer}.pf-m-inline#{$breakpoint-name} {
      > .#{$drawer}__main > .#{$drawer}__content {
        overflow-x: auto;
      }

      > .#{$drawer}__main > .#{$drawer}__panel {
        margin-inline-start: calc(var(--#{$drawer}__panel--FlexBasis) * -1);

        @include pf-v5-bidirectional-style(
          $prop: transform,
          $ltr-val: translateX(100%),
          $rtl-val: translateX(#{pf-v5-calc-inverse(100%)}),
        ); 
      }

      // stylelint-disable selector-max-class, selector-max-combinators, selector-max-compound-selectors
      // Inline, expanded
      &.pf-m-expanded > .#{$drawer}__main > .#{$drawer}__panel {
        margin-inline-start: 0;
        transform: translateX(0);
      }

      > .#{$drawer}__main > .#{$drawer}__panel > .#{$drawer}__body > .#{$drawer}__head .#{$drawer}__close {
        display: unset;
      }

      // Panel left
      &.pf-m-panel-left {
        > .#{$drawer}__main > .#{$drawer}__panel {
          margin-inline-start: 0;
          margin-inline-end: calc(var(--#{$drawer}__panel--FlexBasis) * -1);

          @include pf-v5-bidirectional-style(
            $prop: transform,
            $ltr-val: translateX(-100%),
            $rtl-val: translateX(#{pf-v5-calc-inverse(-100%)}),
          ); 
        }

        // Inline, expanded, panel left
        &.pf-m-expanded > .#{$drawer}__main > .#{$drawer}__panel {
          margin-inline-end: 0;
          transform: translateX(0);
        }

        > .#{$drawer}__main > .#{$drawer}__panel > .#{$drawer}__body > .#{$drawer}__head .#{$drawer}__close {
          display: unset;
        }
      }

      // Panel bottom
      &.pf-m-panel-bottom {
        > .#{$drawer}__main > .#{$drawer}__panel {
          margin-block-end: calc(var(--#{$drawer}__panel--FlexBasis) * -1);
          transform: translateY(100%);
        }

        // Inline, expanded, panel left
        &.pf-m-expanded > .#{$drawer}__main > .#{$drawer}__panel {
          margin-block-end: 0;
          transform: translateY(0);
        }
      }
      // stylelint-enable
    }

    // Static
    .#{$drawer}.pf-m-static#{$breakpoint-name} {
      > .#{$drawer}__main > .#{$drawer}__panel {
        transform: translateX(0);
      }

      // stylelint-disable max-nesting-depth, selector-max-class, selector-max-combinators, selector-max-compound-selectors
      &.pf-m-panel-left {
        > .#{$drawer}__main > .#{$drawer}__panel {
          margin-inline-end: 0;
          transform: translateX(0);
        }
      }

      &.pf-m-panel-bottom {
        > .#{$drawer}__main > .#{$drawer}__panel {
          transform: translateX(0);
        }
      }

      > .#{$drawer}__main > .#{$drawer}__panel > .#{$drawer}__body > .#{$drawer}__head .#{$drawer}__close {
        display: none;
      }
      // stylelint-enable
    }
  }
}

// stylelint-disable no-invalid-position-at-import-rule
@import "themes/dark/drawer";

@include pf-v5-theme-dark {
  @include pf-v5-theme-dark-drawer;
}
