@use '../../sass-utilities' as *;

:where(:root, .#{$notification-badge}) {
  --#{$notification-badge}--BackgroundColor: transparent;
  --#{$notification-badge}--MinWidth: 40px;
  --#{$notification-badge}--Gap: var(--pf-t--global--spacer--xs);
  --#{$notification-badge}--PaddingBlockStart: var(--pf-t--global--spacer--sm);
  --#{$notification-badge}--PaddingInlineEnd: var(--pf-t--global--spacer--sm);
  --#{$notification-badge}--PaddingBlockEnd: var(--pf-t--global--spacer--sm);
  --#{$notification-badge}--PaddingInlineStart: var(--pf-t--global--spacer--sm);
  --#{$notification-badge}--MarginBlockStart: calc(-1 * var(--pf-t--global--spacer--sm));
  --#{$notification-badge}--MarginInlineEnd: calc(-1 * var(--pf-t--global--spacer--sm));
  --#{$notification-badge}--MarginBlockEnd: calc(-1 * var(--pf-t--global--spacer--sm));
  --#{$notification-badge}--MarginInlineStart: calc(-1 * var(--pf-t--global--spacer--sm));

  // ::before border treatment
  --#{$notification-badge}--before--BorderColor: transparent;
  --#{$notification-badge}--BorderRadius: var(--pf-t--global--border--radius--small);
  --#{$notification-badge}--before--BorderWidth: var(--pf-t--global--border--width--control--default);

  // Modifiers
  --#{$notification-badge}--m-read--Color: var(--pf-t--global--text--color--regular);
  --#{$notification-badge}--m-read--before--BorderColor: var(--pf-t--global--border--color--default);
  --#{$notification-badge}--m-read--hover--before--BorderColor: var(--pf-t--global--border--color--hover);
  --#{$notification-badge}--m-read--m-expanded--before--BorderColor: var(--pf-t--global--border--color--clicked);
  --#{$notification-badge}--m-read--BackgroundColor: var(--pf-t--global--background--color--control--default);
  --#{$notification-badge}--m-read--m-expanded--BackgroundColor: var(--pf-t--global--background--color--control--default);
  --#{$notification-badge}--m-read--m-expanded--before--BorderColor: var(--pf-t--global--border--color--clicked);

  // Unread
  --#{$notification-badge}--m-unread--Color: var(--pf-t--global--icon--color--on-brand--default);
  --#{$notification-badge}--m-unread--BackgroundColor: var(--pf-t--global--color--brand--default);
  --#{$notification-badge}--m-unread--hover--BackgroundColor: var(--pf-t--global--color--brand--hover);
  --#{$notification-badge}--m-unread--m-expanded--BackgroundColor: var(--pf-t--global--color--brand--clicked);

  // Attention
  --#{$notification-badge}--m-attention--Color: var(--pf-t--global--icon--color--status--on-danger--default);
  --#{$notification-badge}--m-attention--BackgroundColor: var(--pf-t--global--color--status--danger--default);
  --#{$notification-badge}--m-attention--hover--BackgroundColor: var(--pf-t--global--color--status--danger--hover);
  --#{$notification-badge}--m-attention--m-expanded--BackgroundColor: var(--pf-t--global--color--status--danger--clicked);
}

.#{$notification-badge} {
  display: inline-flex;
  gap: var(--#{$notification-badge}--Gap);
  align-items: center;
  justify-content: center;
  padding-block-start: var(--#{$notification-badge}--PaddingBlockStart);
  padding-block-end: var(--#{$notification-badge}--PaddingBlockEnd);
  padding-inline-start: var(--#{$notification-badge}--PaddingInlineStart);
  padding-inline-end: var(--#{$notification-badge}--PaddingInlineEnd);
  margin-block-start: var(--#{$notification-badge}--MarginBlockStart);
  margin-block-end: var(--#{$notification-badge}--MarginBlockEnd);
  margin-inline-start: var(--#{$notification-badge}--MarginInlineStart);
  margin-inline-end: var(--#{$notification-badge}--MarginInlineEnd);
  background-color: var(--#{$notification-badge}--BackgroundColor);
  border-radius: var(--#{$notification-badge}--BorderRadius);

  &::before {
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    inset-inline-end: 0;
    content: "";
    border: var(--#{$notification-badge}--before--BorderWidth) solid var(--#{$notification-badge}--before--BorderColor);
    border-radius: var(--#{$notification-badge}--BorderRadius);
    transform: translate(var(--#{$notification-badge}--before--TranslateX), var(--#{$notification-badge}--before--TranslateY));
  }

  &.pf-m-read {
    --#{$notification-badge}--BackgroundColor: var(--#{$notification-badge}--m-read--BackgroundColor);
    --#{$notification-badge}--before--BorderColor: var(--#{$notification-badge}--m-read--before--BorderColor);

    color: var(--#{$notification-badge}--m-read--Color, inherit);

    &:hover {
      --#{$notification-badge}--before--BorderColor: var(--#{$notification-badge}--m-read--hover--before--BorderColor);
    }
  }

  &.pf-m-unread {
    --#{$notification-badge}--BackgroundColor: var(--#{$notification-badge}--m-unread--BackgroundColor);

    color: var(--#{$notification-badge}--m-unread--Color);

    &:hover {
      --#{$notification-badge}--BackgroundColor: var(--#{$notification-badge}--m-unread--hover--BackgroundColor);
    }
  }

  &.pf-m-attention {
    --#{$notification-badge}--BackgroundColor: var(--#{$notification-badge}--m-attention--BackgroundColor);

    color: var(--#{$notification-badge}--m-attention--Color);

    &:hover {
      --#{$notification-badge}--m-attention--BackgroundColor: var(--#{$notification-badge}--m-attention--hover--BackgroundColor);
    }
  }

  &.pf-m-expanded {
    --#{$notification-badge}--m-read--BackgroundColor: var(--#{$notification-badge}--m-read--m-expanded--BackgroundColor);
    --#{$notification-badge}--m-read--before--BorderColor: var(--#{$notification-badge}--m-read--m-expanded--before--BorderColor);
    --#{$notification-badge}--m-unread--BackgroundColor: var(--#{$notification-badge}--m-unread--m-expanded--BackgroundColor);
    --#{$notification-badge}--m-attention--BackgroundColor: var(--#{$notification-badge}--m-attention--m-expanded--BackgroundColor);
  }
}
