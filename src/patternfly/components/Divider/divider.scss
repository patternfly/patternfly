// @debug $divider; // check your variable names located in src/patternfly/sass-utilities/component-namespaces.scss
$pf-v5-c-divider--breakpoint-map: build-breakpoint-map("base", "sm", "md", "lg", "xl", "2xl");
$pf-v5-c-divider--spacer-map: build-spacer-map("none", "xs", "sm", "md", "lg", "xl", "2xl", "3xl");

@mixin pf-v5-c-divider--m-horizontal {
  --#{$divider}--Display: var(--#{$divider}--m-horizontal--Display);
  --#{$divider}--FlexDirection: var(--#{$divider}--m-horizontal--FlexDirection);
  --#{$divider}--after--Width: var(--#{$divider}--m-horizontal--after--Width);
  --#{$divider}--after--Height: var(--#{$divider}--m-horizontal--after--Height);

  width: 100%; // update to var breaking change
  height: auto; // update to var breaking change

  &::after {
    flex-basis:
      calc(
        var(--#{$divider}--after--FlexBasis) - calc(var(--#{$divider}--after--Inset) * 2)
      ); // update at breaking change
  }
}

@mixin pf-v5-c-divider--m-vertical {
  --#{$divider}--Display: var(--#{$divider}--m-vertical--Display);
  --#{$divider}--FlexDirection: var(--#{$divider}--m-vertical--FlexDirection);
  --#{$divider}--after--Width: var(--#{$divider}--m-vertical--after--Width);
  --#{$divider}--after--Height: var(--#{$divider}--m-vertical--after--Height);

  width: auto; // update to var breaking change
  height: inherit; // update to var at breaking change

  &::after {
    flex-basis:
      calc(
        var(--#{$divider}--m-vertical--after--FlexBasis) - var(--#{$divider}--after--Inset)
      ); // update at breaking change
  }
}

.#{$divider} {
  // Base
  --#{$divider}--BorderWidth--base: var(--#{$pf-global}--BorderWidth--sm);
  --#{$divider}--BorderColor--base: var(--#{$divider}--BackgroundColor); // update at breaking change
  --#{$divider}--Height: var(--#{$divider}--BorderWidth--base); // remove at breaking change
  --#{$divider}--BackgroundColor: var(--#{$pf-global}--BorderColor--100); // remove at breaking change
  --#{$divider}--after--BackgroundColor: var(--#{$divider}--BorderColor--base); // remove at breaking change

  // Borders
  --#{$divider}--after--FlexBasis: 100%;
  --#{$divider}--after--Inset: 0%;

  // Vertical
  --#{$divider}--m-vertical--after--FlexBasis: 100%; // remove at breaking change

  // Horizontal mixin
  --#{$divider}--m-horizontal--Display: flex;
  --#{$divider}--m-horizontal--FlexDirection: row;
  --#{$divider}--m-horizontal--after--Height: var(--#{$divider}--Height); // update at breaking change
  --#{$divider}--m-horizontal--after--Width: auto;

  // Vertical mixin
  --#{$divider}--m-vertical--Display: inline-flex;
  --#{$divider}--m-vertical--FlexDirection: column;
  --#{$divider}--m-vertical--after--Height: auto;
  --#{$divider}--m-vertical--after--Width: var(--#{$divider}--BorderWidth--base); // remove at breaking change

  // Vertical
  @include pf-v5-hidden-visible(var(--#{$divider}--Display));
  @include pf-v5-c-divider--m-horizontal; // set to default to horizontal

  flex-direction: var(--#{$divider}--FlexDirection);
  flex-shrink: 0;
  align-items: center;
  align-self: stretch;
  justify-content: center;
  border: 0; // removes the default border styling on an hr

  &::after {
    align-self: stretch;
    justify-self: center;
    width: var(--#{$divider}--after--Width);
    height: var(--#{$divider}--after--Height);
    content: "";
    background-color: var(--#{$divider}--after--BackgroundColor);
  }

  // stylelint-disable max-nesting-depth

  @each $breakpoint, $breakpoint-value in $pf-v5-c-divider--breakpoint-map {
    $breakpoint-name: if($breakpoint != "base", -on-#{$breakpoint}, "");

    @if $breakpoint != "base" {
      @include pf-v5-apply-breakpoint($breakpoint) {
        &.pf-m-horizontal#{$breakpoint-name} {
          @include pf-v5-c-divider--m-horizontal;
        }
      }
    }

    @include pf-v5-apply-breakpoint($breakpoint) {
      &.pf-m-vertical#{$breakpoint-name} {
        @include pf-v5-c-divider--m-vertical;
      }
    }

    @include pf-v5-apply-breakpoint($breakpoint) {
      @each $spacer, $spacer-value in $pf-v5-c-divider--spacer-map {
        @if $spacer == none {
          $spacer-value: 0%;
        }

        &.pf-m-inset-#{$spacer}#{$breakpoint-name} {
          --#{$divider}--after--Inset: #{$spacer-value};
        }
      }
    }
  }

  // stylelint-enable
}
