@use '../../config' as *;

:where(:root),
:where(.#{$card}) {
  --#{$card}--BackgroundColor: var(--pf-t--global--background--color--primary--default);
  --#{$card}--BorderColor: var(--pf-t--global--border--color--default);
  --#{$card}--BorderStyle: solid;
  --#{$card}--BorderWidth: var(--pf-t--global--border--width--box--default);
  --#{$card}--BorderRadius: var(--pf-t--global--border--radius--medium);
  --#{$card}--first-child--PaddingTop: var(--pf-t--global--spacer--lg);
  --#{$card}--child--PaddingRight: var(--pf-t--global--spacer--lg);
  --#{$card}--child--PaddingBottom: var(--pf-t--global--spacer--lg);
  --#{$card}--child--PaddingLeft: var(--pf-t--global--spacer--lg);
  --#{$card}--c-divider--child--PaddingTop: var(--pf-t--global--spacer--lg);
  --#{$card}__title--not--last-child--PaddingBottom: var(--pf-t--global--spacer--md);
  --#{$card}__title-text--Color: var(--pf-t--global--text--color--regular);
  --#{$card}__title-text--FontFamily: var(--pf-t--global--font--family--heading);
  --#{$card}__title-text--FontSize: var(--pf-t--global--font--size--heading--sm);
  --#{$card}__title-text--FontWeight: var(--pf-t--global--font--weight--heading);
  --#{$card}__title-text--LineHeight: var(--pf-t--global--font--line-height--heading);
  --#{$card}--c-button--disabled--Color: var(--pf-t--global--text--color--on-disabled);
  --#{$card}__body--FontSize: var(--pf-t--global--font--size--body--default);
  --#{$card}__footer--FontSize: var(--pf-t--global--font--size--body--default);
  --#{$card}__footer--Color: var(--pf-t--global--text--color--subtle);
  --#{$card}__actions--PaddingLeft: var(--pf-t--global--spacer--md);
  --#{$card}__actions--Gap: var(--pf-t--global--spacer--sm);
  --#{$card}__actions--MarginTop: calc(var(--pf-t--global--spacer--control--vertical--default) * -1);
  --#{$card}__actions--MarginBottom: calc(var(--pf-t--global--spacer--control--vertical--default) * -1);

  // Expandable
  --#{$card}__header-toggle--MarginTop: calc(var(--pf-t--global--spacer--button--vertical--default) * -1);
  --#{$card}__header-toggle--MarginRight: var(--pf-t--global--spacer--xs);
  --#{$card}__header-toggle--MarginBottom: calc(var(--pf-t--global--spacer--button--vertical--default) * -1);
  --#{$card}__header-toggle--MarginLeft: calc(var(--pf-t--global--spacer--md) * -1);
  --#{$card}__header-toggle-icon--Transition: var(--pf-t--global--transition);
  --#{$card}--m-expanded__header-toggle-icon--Rotate: 90deg;


  // Selectable/Clickable
  --#{$card}--m-selectable--BorderWidth: var(--#{$card}--BorderWidth);

  // Selected state (checked) of selectable card
  --#{$card}--m-selectable--m-selected--BorderColor: var(--pf-t--global--border--color--clicked);
  --#{$card}--m-selectable--m-selected--BorderWidth: var(--pf-t--global--border--width--box--clicked);

  // Hover on selectable card
  --#{$card}--m-selectable--hover--BorderColor: var(--pf-t--global--border--color--hover);

  // Focus on selectable card (label)
  --#{$card}--m-selectable--focus--BorderColor: var(--pf-t--global--border--color--hover);
  --#{$card}--m-selectable--focus--BorderWidth: var(--pf-t--global--border--width--box--hover);

  // Focus on a selected card (label)
  --#{$card}--m-selectable--m-selected--focus--BorderColor: var(--pf-t--global--border--color--clicked);
  --#{$card}--m-selectable--m-selected--focus--BorderWidth: var(--pf-t--global--border--width--box--clicked);

  // Disabled state
  --#{$card}--m-selectable--m-disabled__title-text--Color: var(--pf-t--global--text--color--on-disabled);
  --#{$card}--m-selectable--m-disabled__body--Color: var(--pf-t--global--text--color--on-disabled);
  --#{$card}--m-selectable--m-disabled__footer--Color: var(--pf-t--global--text--color--on-disabled);
  --#{$card}--m-selectable--m-disabled--BackgroundColor: var(--pf-t--global--background--color--disabled--default);
  --#{$card}--m-selectable--m-disabled--BorderColor: transparent;

  // Selectable AND Clickable
  // Clicked (pf-m-current) selectable AND clickable card
  --#{$card}--m-selectable--m-clickable--m-current--BorderColor: var(--pf-t--global--border--color--clicked);
  --#{$card}--m-selectable--m-clickable--m-current--BorderWidth: var(--pf-t--global--border--width--box--clicked);

  // Compact
  --#{$card}--m-compact__title-text--FontSize: var(--pf-t--global--font--size--heading--xs);
  --#{$card}--m-compact__body--FontSize: var(--pf-t--global--font--size--body--default);
  --#{$card}--m-compact__footer--FontSize: var(--pf-t--global--font--size--body--sm);
  --#{$card}--m-compact--first-child--PaddingTop: var(--pf-t--global--spacer--md);
  --#{$card}--m-compact--child--PaddingRight: var(--pf-t--global--spacer--md);
  --#{$card}--m-compact--child--PaddingBottom: var(--pf-t--global--spacer--md);
  --#{$card}--m-compact--child--PaddingLeft: var(--pf-t--global--spacer--md);
  --#{$card}--m-compact--c-divider--child--PaddingTop: var(--pf-t--global--spacer--md);
  --#{$card}--m-compact__title--not--last-child--PaddingBottom: var(--pf-t--global--spacer--sm);

  // Display large
  --#{$card}--m-display-lg__title-text--FontSize: var(--pf-t--global--font--size--heading--md);
  --#{$card}--m-display-lg__body--FontSize: var(--pf-t--global--font--size--body--lg);
  --#{$card}--m-display-lg__footer--FontSize: var(--pf-t--global--font--size--body--default);
  --#{$card}--m-display-lg--first-child--PaddingTop: var(--pf-t--global--spacer--xl);
  --#{$card}--m-display-lg--child--PaddingRight: var(--pf-t--global--spacer--xl);
  --#{$card}--m-display-lg--child--PaddingBottom: var(--pf-t--global--spacer--xl);
  --#{$card}--m-display-lg--child--PaddingLeft: var(--pf-t--global--spacer--xl);
  --#{$card}--m-display-lg--c-divider--child--PaddingTop: var(--pf-t--global--spacer--xl);
  --#{$card}--m-display-lg__title--not--last-child--PaddingBottom: var(--pf-t--global--spacer--lg);

  // Secondary
  --#{$card}--m-secondary--BackgroundColor: var(--pf-t--global--background--color--secondary--default);
  --#{$card}--m-secondary--BorderColor: transparent;

  // Full height
  --#{$card}--m-full-height--Height: 100%;

  // Plain - no border or background color
  --#{$card}--m-plain--BorderColor: transparent;
  --#{$card}--m-plain--BackgroundColor: transparent;

  // Toggle right
  --#{$card}__header--m-toggle-right--toggle--MarginRight: calc(var(--pf-t--global--spacer--button--horizontal--compact) * -1);
  --#{$card}__header--m-toggle-right--toggle--MarginLeft: var(--pf-t--global--spacer--xs);
}

.#{$card} {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: auto;
  background-color: var(--#{$card}--BackgroundColor);
  border: var(--#{$card}--BorderColor) var(--#{$card}--BorderStyle) var(--#{$card}--BorderWidth);
  border-radius: var(--#{$card}--BorderRadius);

  // SELECTABLE CARDS
  &.pf-m-selectable {
    // disables the gap since these have an empty label
    .#{$card}__selectable-actions :is(.#{$check}, .#{$radio}) {
      gap: 0;
    }
  }

  // SELECTABLE or CLICKABLE CARDS
  &.pf-m-selectable,
  &.pf-m-clickable {
    isolation: isolate;
    border: none; // border will come from the input's ::before instead of the card so remove this so there's isn't a double border
  }

  // stylelint-disable selector-max-class
  // Cards that are BOTH SELECTABLE AND CLICKABLE
  &.pf-m-selectable.pf-m-clickable {
    .#{$card}__selectable-actions .#{$check}__label,
    .#{$card}__selectable-actions .#{$radio}__label {
      position: unset;

      &::before {
        position: absolute;
        inset: 0;
        cursor: pointer;
      }
    }

    // When SELECTABLE and CLICKABLE card is focused, don't show change of background or border on the card
    .#{$card}__selectable-actions .#{$check}__input:where(:focus-visible) ~ .#{$check}__label,
    .#{$card}__selectable-actions .#{$radio}__input:where(:focus-visible) ~ .#{$radio}__label {
      --#{$card}--BackgroundColor: revert;
      --#{$card}--BorderColor: revert;
    }

    // SELECTABLE and CLICKABLE card is selected (Check box checked or marked .pf-m-selected)
    .#{$card}__selectable-actions .#{$check}__input:where(:checked) ~ .#{$check}__label,
    .#{$card}__selectable-actions .#{$radio}__input:where(:checked) ~ .#{$radio}__label,
    &.pf-m-selected {
      --#{$card}--BorderColor: revert;
      --#{$card}--m-selectable--BorderWidth: revert;
    }

    // SELECTABLE and CLICKABLE card is clicked
    &.pf-m-current {
      --#{$card}--BorderColor: var(--#{$card}--m-selectable--m-clickable--m-current--BorderColor);
      --#{$card}--BorderWidth: var(--#{$card}--m-selectable--m-clickable--m-current--BorderWidth);
    }

    // SELECTABLE and CLICKABLE but DISABLED card
    .#{$card}__selectable-actions .#{$check}__input:where(:disabled) ~ .#{$check}__label,
    .#{$card}__selectable-actions .#{$radio}__input:where(:disabled) ~ .#{$radio}__label,
    &.pf-m-disabled {
      --#{$card}--BackgroundColor: var(--#{$card}--m-selectable--m-disabled--BackgroundColor);
    }
  }
  // stylelint-enable selector-max-class

  &.pf-m-compact {
    --#{$card}__title-text--FontSize: var(--#{$card}--m-compact__title-text--FontSize);
    --#{$card}__body--FontSize: var(--#{$card}--m-compact__body--FontSize);
    --#{$card}__footer--FontSize: var(--#{$card}--m-compact__footer--FontSize);
    --#{$card}--first-child--PaddingTop: var(--#{$card}--m-compact--first-child--PaddingTop);
    --#{$card}--child--PaddingRight: var(--#{$card}--m-compact--child--PaddingRight);
    --#{$card}--child--PaddingBottom: var(--#{$card}--m-compact--child--PaddingBottom);
    --#{$card}--child--PaddingLeft: var(--#{$card}--m-compact--child--PaddingLeft);
    --#{$card}--c-divider--child--PaddingTop: var(--#{$card}--m-compact--c-divider--child--PaddingTop);
    --#{$card}__title--not--last-child--PaddingBottom: var(--#{$card}--m-compact__title--not--last-child--PaddingBottom);
  }

  &.pf-m-display-lg {
    --#{$card}__title-text--FontSize: var(--#{$card}--m-display-lg__title-text--FontSize);
    --#{$card}__body--FontSize: var(--#{$card}--m-display-lg__body--FontSize);
    --#{$card}__footer--FontSize: var(--#{$card}--m-display-lg__footer--FontSize);
    --#{$card}--first-child--PaddingTop: var(--#{$card}--m-display-lg--first-child--PaddingTop);
    --#{$card}--child--PaddingRight: var(--#{$card}--m-display-lg--child--PaddingRight);
    --#{$card}--child--PaddingBottom: var(--#{$card}--m-display-lg--child--PaddingBottom);
    --#{$card}--child--PaddingLeft: var(--#{$card}--m-display-lg--child--PaddingLeft);
    --#{$card}--c-divider--child--PaddingTop: var(--#{$card}--m-display-lg--c-divider--child--PaddingTop);
    --#{$card}__title--not--last-child--PaddingBottom: var(--#{$card}--m-display-lg__title--not--last-child--PaddingBottom);
  }

  &.pf-m-secondary {
    --#{$card}--BorderColor: var(--#{$card}--m-secondary--BorderColor);
    --#{$card}--BackgroundColor: var(--#{$card}--m-secondary--BackgroundColor);
  }

  &.pf-m-plain {
    --#{$card}--BorderColor: var(--#{$card}--m-plain--BorderColor);
    --#{$card}--BackgroundColor: var(--#{$card}--m-plain--BackgroundColor);
  }

  &.pf-m-expanded {
    .#{$card}__header-toggle-icon {
      transform: rotate(var(--#{$card}--m-expanded__header-toggle-icon--Rotate));
    }
  }

  &.pf-m-full-height {
    height: var(--#{$card}--m-full-height--Height);
  }

  > .#{$divider} {
    & + .#{$card}__header,
    & + .#{$card}__title,
    & + .#{$card}__body,
    & + .#{$card}__footer {
      padding-block-start: var(--#{$card}--c-divider--child--PaddingTop);
    }
  }
}

.#{$card}__header {
  display: flex;
  flex-direction: row;
  align-items: center;

  .#{$card}__title {
    --#{$card}--first-child--PaddingTop: 0;
    --#{$card}__title--not--last-child--PaddingBottom: 0;

    padding: 0;
  }

  &.pf-m-toggle-right {
    --#{$card}__header-toggle--MarginRight: var(--#{$card}__header--m-toggle-right--toggle--MarginRight);
    --#{$card}__header-toggle--MarginLeft: var(--#{$card}__header--m-toggle-right--toggle--MarginLeft);

    .#{$card}__header-toggle {
      order: 2;
    }
  }
}

.#{$card}__header-main {
  flex: 1;
}

.#{$card}__header-toggle {
  align-self: flex-start;
  margin-block-start: var(--#{$card}__header-toggle--MarginTop);
  margin-block-end: var(--#{$card}__header-toggle--MarginBottom);
  margin-inline-start: var(--#{$card}__header-toggle--MarginLeft);
  margin-inline-end: var(--#{$card}__header-toggle--MarginRight);
}

.#{$card}__header-toggle-icon {
  @include pf-v6-mirror-inline-on-rtl;

  display: inline-block;
  transition: var(--#{$card}__header-toggle-icon--Transition);
}

.#{$card}__title-text {
  font-family: var(--#{$card}__title-text--FontFamily);
  font-size: var(--#{$card}__title-text--FontSize);
  font-weight: var(--#{$card}__title-text--FontWeight);
  line-height: var(--#{$card}__title-text--LineHeight);
  color: var(--#{$card}__title-text--Color);
}

.#{$card}__actions {
  display: flex;
  gap: var(--#{$card}__actions--Gap);
  align-items: center;
  align-self: flex-start;
  order: 1;
  padding-inline-start: var(--#{$card}__actions--PaddingLeft);
  margin-block-start: var(--#{$card}__actions--MarginTop);
  margin-block-end: var(--#{$card}__actions--MarginBottom);
  margin-inline-start: auto;

  + .#{$card}__title,
  + .#{$card}__body,
  + .#{$card}__footer {
    padding: 0;
  }

  &.pf-m-no-offset {
    --#{$card}__actions--MarginTop: 0;
    --#{$card}__actions--MarginBottom: 0;
  }
}

// Labels are used to handle states of selectable and clickable cards
.#{$card}__selectable-actions .#{$check}__label,
.#{$card}__selectable-actions .#{$radio}__label {
  position: absolute;
  inset: 0;
  justify-self: auto;
  cursor: pointer;

  &::before {
    position: absolute;
    inset: 0;
    z-index: -1;
    content: '';
    background-color: var(--#{$card}--BackgroundColor, transparent);
    border: var(--#{$card}--m-selectable--BorderWidth) solid var(--#{$card}--BorderColor, transparent);
    border-radius: var(--#{$card}--BorderRadius);
  }

  &:hover {
    --#{$card}--BorderColor: var(--#{$card}--m-selectable--hover--BorderColor);
  }
}

// Selected card (checked)
.#{$card}__selectable-actions .#{$check}__input:where(:checked) ~ .#{$check}__label,
.#{$card}__selectable-actions .#{$radio}__input:where(:checked) ~ .#{$radio}__label,
.#{$card}.pf-m-selected {
  --#{$card}--BorderColor: var(--#{$card}--m-selectable--m-selected--BorderColor);
  --#{$card}--m-selectable--BorderWidth: var(--#{$card}--m-selectable--m-selected--BorderWidth); // this line used to be just BorderWidth, not m-selectable
}

// Focus on the card (focus on label but not checked)
.#{$card}__selectable-actions .#{$check}__input:where(:focus-visible) ~ .#{$check}__label,
.#{$card}__selectable-actions .#{$radio}__input:where(:focus-visible) ~ .#{$radio}__label {
  --#{$card}--BorderColor: var(--#{$card}--m-selectable--focus--BorderColor);
  --#{$card}--BorderWidth: var(--#{$card}--m-selectable--focus--BorderWidth);
}

// Focus on a selected card (focus + checked)
.#{$card}__selectable-actions .#{$check}__input:where(:focus-visible):where(:checked) ~ .#{$check}__label,
.#{$card}__selectable-actions .#{$radio}__input:where(:focus-visible):where(:checked) ~ .#{$radio}__label {
  --#{$card}--BorderColor: var(--#{$card}--m-selectable--m-selected--focus--BorderColor);
  --#{$card}--BorderWidth: var(--#{$card}--m-selectable--m-selected--focus--BorderWidth);
}

// Disabled card
.#{$card}__selectable-actions .#{$check}__input:where(:disabled) ~ .#{$check}__label,
.#{$card}__selectable-actions .#{$radio}__input:where(:disabled) ~ .#{$radio}__label,
.#{$card}.pf-m-disabled {
  --#{$card}__title-text--Color: var(--#{$card}--m-selectable--m-disabled__title-text--Color);
  --#{$card}__body--Color: var(--#{$card}--m-selectable--m-disabled__body--Color);
  --#{$card}__footer--Color: var(--#{$card}--m-selectable--m-disabled__footer--Color);
  --#{$card}--BackgroundColor: var(--#{$card}--m-selectable--m-disabled--BackgroundColor);
  --#{$card}--BorderColor: var(--#{$card}--m-selectable--m-disabled--BorderColor);
}

.#{$card}__header,
.#{$card}__title,
.#{$card}__body,
.#{$card}__footer {
  padding-block-end: var(--#{$card}--child--PaddingBottom);
  padding-inline-start: var(--#{$card}--child--PaddingLeft);
  padding-inline-end: var(--#{$card}--child--PaddingRight);

  &:first-child {
    padding-block-start: var(--#{$card}--first-child--PaddingTop);
  }
}

.#{$card}__header,
.#{$card}__title {
  &:not(:last-child) {
    padding-block-end: var(--#{$card}__title--not--last-child--PaddingBottom);
  }

  // Normal disabled button color won't show on the disabled card
  button.pf-m-inline.pf-m-disabled {
    --#{$button}--disabled--Color: var(--#{$card}--c-button--disabled--Color);
  }
}

.#{$card}__expandable-content {
  --#{$card}--first-child--PaddingTop: 0;
}

.#{$card}__body:not(.pf-m-no-fill) {
  flex: 1 1 auto;
}

.#{$card}__body {
  font-size: var(--#{$card}__body--FontSize);
  color: var(--#{$card}__body--Color);
}

.#{$card}__footer {
  font-size: var(--#{$card}__footer--FontSize);
  color: var(--#{$card}__footer--Color);
}
