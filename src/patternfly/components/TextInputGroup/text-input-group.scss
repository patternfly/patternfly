@use '../../config' as *;

:where(:root),
:where(.#{$text-input-group}) {
  --#{$text-input-group}--BackgroundColor: var(--pf-t--global--background--color--control--default);
  --#{$text-input-group}--BorderColor: var(--pf-t--global--border--color--default);
  --#{$text-input-group}--BorderWidth: var(--pf-t--global--border--width--control--default);
  --#{$text-input-group}--BorderRadius: var(--pf-t--global--border--radius--small);

  // Border hover
  --#{$text-input-group}--m-hover--BorderColor: var(--pf-t--global--border--color--hover);

  // Main
  --#{$text-input-group}__main--first-child--not--text-input--MarginLeft: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}__main--m-icon__text-input--PaddingLeft: var(--pf-t--global--spacer--xl);
  --#{$text-input-group}__main--RowGap: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}__main--ColumnGap: var(--pf-t--global--spacer--xs);

  // Chip group
  --#{$text-input-group}--c-chip-group__main--PaddingTop: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}--c-chip-group__main--PaddingRight: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}--c-chip-group__main--PaddingBottom: var(--pf-t--global--spacer--xs);

  // Text input
  --#{$text-input-group}__text-input--PaddingTop: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__text-input--PaddingRight: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__text-input--PaddingBottom: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__text-input--PaddingLeft: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__text-input--MinWidth: 12ch;
  --#{$text-input-group}__text-input--m-hint--Color: var(--pf-t--global--text--color--placeholder);
  --#{$text-input-group}__text-input--placeholder--Color: var(--pf-t--global--text--color--placeholder);
  --#{$text-input-group}__text-input--BackgroundColor: transparent;
  --#{$text-input-group}__text-input--OutlineOffset: -6px;

  // Icon
  --#{$text-input-group}__icon--Left: var(--pf-t--global--spacer--sm);
  --#{$text-input-group}__icon--Color: var(--pf-t--global--icon--color--regular);
  --#{$text-input-group}__icon--TranslateY: -50%;

  // Utilities
  --#{$text-input-group}__utilities--child--MarginLeft: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}__utilities--c-button--PaddingRight: var(--pf-t--global--spacer--xs);
  --#{$text-input-group}__utilities--c-button--PaddingLeft: var(--pf-t--global--spacer--xs);

  // input disabled style
  --#{$text-input-group}--m-disabled--Color: var(--pf-t--global--text--color--on-disabled);
  --#{$text-input-group}--m-disabled--BackgroundColor: var(--pf-t--global--background--color--disabled--default);
}

.#{$text-input-group} {
  position: relative;
  display: flex;
  width: 100%; // when child of flex layout, take up space
  color: var(--#{$text-input-group}--Color, inherit);
  background-color: var(--#{$text-input-group}--BackgroundColor);
  border-radius: var(--#{$text-input-group}--BorderRadius);

  &::before {
    position: absolute;
    inset: 0;
    pointer-events: none;
    content: "";
    border: var(--#{$text-input-group}--BorderWidth) solid var(--#{$text-input-group}--BorderColor);
    border-radius: var(--#{$text-input-group}--BorderRadius);
  }

  &:hover {
    --#{$text-input-group}--BorderColor: var(--#{$text-input-group}--m-hover--BorderColor);
  }

  &.pf-m-disabled {
    --#{$text-input-group}--Color: var(--#{$text-input-group}--m-disabled--Color);
    --#{$text-input-group}__icon--Color: var(--#{$text-input-group}--m-disabled--Color);
    --#{$text-input-group}--BackgroundColor: var(--#{$text-input-group}--m-disabled--BackgroundColor);

    pointer-events: none;
  }

  &.pf-m-plain {
    --#{$text-input-group}--BackgroundColor: transparent;

    .#{$text-input-group}__text {
      &::before,
      &::after {
        border: 0;
      }
    }
  }
}

.#{$text-input-group}__main {
  display: flex;
  flex: 1;
  flex-wrap: wrap;
  gap: var(--#{$text-input-group}__main--RowGap) var(--#{$text-input-group}__main--ColumnGap);
  min-width: 0;

  &.pf-m-icon {
    --#{$text-input-group}__text-input--PaddingLeft: var(--#{$text-input-group}__main--m-icon__text-input--PaddingLeft);
  }

  > :first-child:not(.#{$text-input-group}__text) {
    margin-inline-start: var(--#{$text-input-group}__main--first-child--not--text-input--MarginLeft);
  }

  .#{$chip-group}__main {
    padding-block-start: var(--#{$text-input-group}--c-chip-group__main--PaddingTop);
    padding-block-end: var(--#{$text-input-group}--c-chip-group__main--PaddingBottom);
    padding-inline-end: var(--#{$text-input-group}--c-chip-group__main--PaddingRight);
  }
}

.#{$text-input-group}__text {
  display: inline-grid;
  flex: 1;
  grid-template-areas: "text-input";
  grid-template-columns: 1fr;

  &::before,
  &::after {
    position: absolute;
    inset: 0;
    pointer-events: none;
    content: "";
  }
}

.#{$text-input-group}__icon {
  position: absolute;
  inset-block-start: 50%;
  inset-inline-start: var(--#{$text-input-group}__icon--Left);
  color: var(--#{$text-input-group}__icon--Color);
  transform: translateY(var(--#{$text-input-group}__icon--TranslateY));
}

.#{$text-input-group}__text-input {
  @include pf-v6-text-overflow;

  position: relative;
  width: 100%;
  min-width: var(--#{$text-input-group}__text-input--MinWidth);
  padding-block-start: var(--#{$text-input-group}__text-input--PaddingTop);
  padding-block-end: var(--#{$text-input-group}__text-input--PaddingBottom);
  padding-inline-start: var(--#{$text-input-group}__text-input--PaddingLeft);
  padding-inline-end: var(--#{$text-input-group}__text-input--PaddingRight);
  background-color: var(--#{$text-input-group}__text-input--BackgroundColor);
  border: 0;
  outline-offset: var(--#{$text-input-group}__text-input--OutlineOffset);

  &,
  &.pf-m-hint {
    grid-area: text-input;
  }

  &.pf-m-hint {
    color: var(--#{$text-input-group}__text-input--m-hint--Color);
  }

  &::placeholder {
    color: var(--#{$text-input-group}__text-input--placeholder--Color);
  }
}

// TODO: update to use gap
.#{$text-input-group}__utilities {
  display: flex;
  align-items: center;
  margin-inline-start: var(--#{$text-input-group}__utilities--MarginLeft);
  margin-inline-end: var(--#{$text-input-group}__utilities--MarginRight);

  > * + * {
    margin-inline-start: var(--#{$text-input-group}__utilities--child--MarginLeft);
  }
}

.#{$text-input-group}__group {
  display: flex;
}

