// Media query used to create responsive classes
@mixin pf-media-query($point) {
  @if $point == "" or $point == null or $point == "base" {
    @content;
  }

  @else if $point == "sm" {
    @media screen and (min-width: $pf-global--breakpoint--sm) {
      @content;
    }
  }

  @else if $point == "md" {
    @media screen and (min-width: $pf-global--breakpoint--md) {
      @content;
    }
  }

  @else if $point == "lg" {
    @media screen and (min-width: $pf-global--breakpoint--lg) {
      @content;
    }
  }

  @else if $point == "xl" {
    @media screen and (min-width: $pf-global--breakpoint--xl) {
      @content;
    }
  }
}

/// Create single prop / value classes, optionally add responsive suffix
/// @group mixins
/// @moduleType mixin
/// @parameter: {Suffix} xs, sm, md, lg, xl, base or null
/// @usage: @include pf-utility-builder(class-name, base sm md lg xl);
/// ===============================================================================================
/// non-responsive, base only                @include pf-utility-builder(class-name) { prop: val !important; }
/// responsive, not including base           @include pf-utility-builder(class-name, sm lg) { prop: val !important; }
/// responsive, including base               @include pf-utility-builder(class-name, base sm lg) { prop: val !important; }
/// responsive, including all breakpoints    @include pf-utility-builder(class-name, $pf-global--breakpoint-list) { prop: val !important; }
/// ===============================================================================================
@mixin pf-utility-builder($class-name, $breakpoints: null) {
  @each $breakpoint in $breakpoints {
    $suffix: -on-#{$breakpoint};

    // if no media query, set suffix to null
    @if $breakpoint == null or $breakpoint == "base" {
      $suffix: "";
    }

    .pf-u-#{$class-name}#{$suffix} {
      @include pf-media-query($breakpoint) {
        @content;
      }
    }
  }
}
