### WARNING -- this file was generated by generate-workflows
name: release
on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN_REDALLEN }} # needs to be an admin token to get around branch protection
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN_REDALLEN }} # needs to be an admin token to get around branch protection
      # Injected by generate-workflows.js
      - uses: actions/setup-node@v4
        with:
          node-version: '20.18.3'
          check-latest: true
      
      - name: Enable Corepack
        shell: bash
        run: corepack enable
      
      - name: Get Yarn configuration
        id: yarn-config
        shell: bash
        run: |
          echo "cache-directory=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "cache-folder=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      
      # TODO: This can be simplified to use the `cache` option of the `actions/setup-node` action when it supports Corepack.
      # See: https://github.com/actions/setup-node/issues/531
      - uses: actions/cache@v4
        id: yarn-cache
        name: Load Yarn cache
        with:
          # Also cache Cypress binary.
          path: |
            ~/.cache/Cypress
            ${{ steps.yarn-config.outputs.cache-directory }}
            ${{ steps.yarn-config.outputs.cache-folder }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-
      
      - name: Install dependencies
        shell: bash
        run: yarn install --immutable
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn lint:sass
        name: Lint SASS
        if: always()
      - run: yarn lint:js
        name: Lint JS
        if: always()
      - run: yarn build-patternfly
        name: Build patternfly
      - uses: actions/cache@v4
        id: docs-cache
        name: Load webpack cache
        with:
          path: '.cache'
          key: ${{ runner.os }}-v4-${{ hashFiles('yarn.lock') }}
      - run: yarn build:docs
        name: Build docs
      - run: node .github/upload-preview.js public
        name: Upload docs
        if: always()
      - name: Install Chrome for Puppeteer
        run: npx puppeteer browsers install chrome
      - run: yarn serve & yarn test
        name: a11y tests
      - run: node .github/upload-preview.js coverage
        name: Upload a11y report
        if: always()
      - run: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
        name: Avoid Unknown Host for github.com
      - run: npx semantic-release@19.0.5
        env:
          HUSKY: 0
        name: Release to NPM

